CAN 컨트롤러에는 5 가지 작동 모드가 있습니다
1) Configuration mode
2) Normal mode
3) Sleep mode
4) Listen-Only mode
5) Loopback mode

작동 모드는 CENTRAL 레지스터의 REQOP <2 : 0> 비트를 통해 선택됩니다.
요청 된 모드는 CANSTAT 레지스터의 OPMOD <2 : 0> 비트를 읽음으로써 검증되어야한다.


<CAN Transceiver Modes of Operation>
CAN 트랜시버에는 두 가지 작동 모드가 있습니다.
• 일반 모드
• 대기 모드

정상 모드는 STBY 핀에 로우 레벨을인가함으로써 선택된다. 대기 모드는 STBY 핀에 하이 레벨을 적용하여 선택된다.


<Configuration Mode>
MCP25625는 활성화전에 초기화해야합니다. 이는 장치가 구성 모드에있는 경우에만 가능합니다.
CANCTRL 레지스터에 REQOPx 비트를 설정하여 전원 켜기, 재설정 또는 다른 모드에서 입력 할 수있는 구성 모드가 자동으로 선택됩니다. 구성 모드가 시작되면 모든 오류 카운터가 지워집니다. 구성 모드는 다음 레지스터를 수정할 수있는 유일한 모드입니다.
• CNF1, CNF2, CNF3
• TXRTSCTRL
• Acceptance Filter registers


************************************** normal mode 사용할 것 ****************************************
<Normal Mode>
Normal Mode는 MCP25625의 표준 작동 모드입니다. 이 모드에서 장치는 모든 버스 메시지를 능동적으로 모니터링하고 확인 비트, 오류 프레임 등을 생성합니다.
이는 또한 MCP25625가 CAN 버스를 통해 메시지를 전송하는 유일한 모드입니다.
*****************************************************************************************************


<CAN Module>
CAN 프로토콜 엔진은 TX 및 RX 핸들러와 함께 CAN 버스에서 메시지를 수신하고 전송하는 데 필요한 모든 기능을 제공합니다. 
************************************************************************
메시지는 먼저 적절한 메시지 버퍼 및 제어 레지스터를 로드하여 전송됩니다. 
************************************************************************
상태 및 오류는 해당 레지스터를 읽음으로써 확인할 수 있습니다. CAN 버스에서 감지 된 모든 메시지는 오류가 있는지 검사 한 다음 사용자 정의 필터와 대조하여 두 개의 수신 버퍼 중 하나로 이동해야하는지 확인합니다.



<SPI Protocol Block>
마이크로 컨트롤러는 SPI 인터페이스를 통해 디바이스와 인터페이스한다. 레지스터는 SPI READ 및 WRITE 명령을 사용하여 액세스 할 수 있습니다.


<CAN Buffers and Filters>
MCP25625에는 3 개의 송신 버퍼와 2 개의 수신 버퍼, 2 개의 수신 마스크 (수신 버퍼 당 하나) 및 총 6 개의 수신 필터가 있습니다.


<CAN Protocol Engine>
- PROTOCOL FINITE STATE MACHINE
엔진의 핵심은 Finite State Machine (FSM)입니다.
FSM은 TX / RX 시프트 레지스터, CRC 레지스터 및 버스 라인 간의 순차 데이터 스트림을 제어하는 ​​시퀀서입니다. 또한 FSM은 오류 관리 논리 (EML) 및 TX / RX 시프트 레지스터와 버퍼 간의 병렬 데이터 스트림을 제어합니다. FSM은 수신, 중재, 전송 및 오류 신호 처리가 CAN 프로토콜에 따라 수행되도록 보장합니다. 버스 라인에서 메시지의 자동 재전송도 FSM에 의해 처리됩니다.



------------------------------------------------------------------------------------------------------
<TRANSMIT BUFFERS>
MCP25625는 3 개의 전송 버퍼를 구현합니다.
이들 각각의 버퍼는 14 바이트의 SRAM을 차지하며 디바이스 메모리 맵에 맵핑된다.
첫 번째 바이트 인 TXBxCTRL은 메시지 버퍼와 관련된 제어 레지스터입니다.
이 레지스터의 정보는 메시지가 전송되는 조건을 결정하고 메시지 전송 상태를 나타냅니다 (레지스터 4-1 참조).
5 바이트는 표준 및 확장 식별자와 다른 메시지 중재 정보 (레지스터 4-3에서 4-7 참조)를 저장하는 데 사용됩니다. 마지막 8 바이트는 메시지의 8 개의 가능한 데이터 바이트에 대한 것입니다 (레지스터 4-8 참조).

최소한 TXBxSIDH, TXBxSIDL 및 TXBxDLC 레지스터를로드해야합니다. 데이터 바이트가 메시지에 있으면 TXBxDn 레지스터도로드해야합니다. 메시지가 확장 식별자를 사용하는 것이라면, TXBxEIDn 레지스터도로드되어야하고 TXBxSIDL 레지스터의 EXIDE 비트가 설정되어야합니다.

*********************************************************************************************
메시지를 보내기 전에 마이크로 컨트롤러는 CANINTE 레지스터의 TXxIE 비트를 초기화하여 메시지가 전송 될 때 인터럽트 생성을 활성화하거나 비활성화해야합니다.

TXBxCTRL 레지스터의 TXREQ 비트는 송신 버퍼에 쓰기 전에 송신 버퍼가 전송 대기 중이 아님을 나타내야한다.
TXREQ 중요
*********************************************************************************************
<INITIATING TRANSMISSION>
메시지 전송을 시작하려면 전송할 각 버퍼에 대해 TXBxCTRL 레지스터의 TXREQ 비트를 설정해야합니다. 이것은 다음과 같이 수행 할 수 있습니다.
• SPI WRITE 명령을 통해 레지스터에 쓰기.
• SPI RTS 명령을 보냅니다.
• 전송할 특정 송신 버퍼에 대해 TxnRTS 핀을 로우로 설정.
SPI 인터페이스를 통해 전송이 시작되면 TX REx 비트는 TXPx 우선 순위 비트와 동시에 설정 될 수 있습니다.TXREQ가 설정되면 TXBxCTRL 레지스터의 ABTF, MLOA 및 TXERR 비트가 자동으로 소거됩니다.

TXBxCTRL 레지스터에서 TXREQ 비트를 설정해도 메시지 전송은 시작되지 않습니다.
단순히 메시지 버퍼에 전송할 준비가되었음을 표시합니다.
*******************************************************************************************
장치가 버스를 사용할 수 있음을 감지하면 전송이 시작됩니다.
*******************************************************************************************
전송이 성공적으로 완료되면 TXREQ 비트가 지워지고 CANINTF 레지스터의 TXxIF 비트가 설정되며 CANINTE 레지스터의 TXxIE 비트가 설정되면 인터럽트가 생성됩니다.

메시지 전송이 실패하면 TXREQ 비트가 설정된 상태로 유지됩니다.
메시지가 전송 대기 중이며 다음 조건 플래그 중 하나가 설정됨을 나타냅니다.

- 메시지가 전송되기 시작했지만 오류 조건이 발생하면 TXBxCTRL 레지스터의 TXERR 비트와 CANINTF 레지스터의 MERRF 비트가 설정됩니다. CANINTE 레지스터의 MERRE 비트가 설정되면 INT 핀에 인터럽트가 발생한다.
- 중재가 손실되면 TXBxCTRL 레지스터의 MLOA 비트가 설정됩니다.

원샷 모드가 활성화 된 경우 (CANCTRL 레지스터의 OSM 비트) 위의 조건은 계속 존재합니다. 그러나 TXREQ 비트는 해제되고 메시지는 전송을 다시 시도하지 않습니다.


<TxnRTS PINS>
TxnRTS 핀은 다음과 같이 구성 할 수있는 입력 핀입니다.
• Request-to-Send 입력 : 전송 버퍼 중 하나에서 메시지를 전송하는 대체 수단을 제공합니다.
• 표준 디지털 입력.

이 핀의 구성 및 제어는 TXRTSCTRL 레지스터를 사용하여 수행된다 (레지스터 4-2 참조). TXRTSCTRL 레지스터는 CAN 컨트롤러가 컨피규레이션 모드에있을 때만 수정할 수 있습니다 (2.0 "동작 모드"참조). Request-to-Send 핀으로 동작하도록 구성된 경우, 핀은 송신 버퍼 용 TXBxCTRL 레지스터의 해당 TXREQ 비트에 매핑된다. TXREQ 비트는 TxnRTS 핀의 하강 에지에 의해 래치된다. TxnRTS 핀은 RxnBF 핀이 로우가 될 때 자동으로 메시지 전송을 시작하기 위해 RxnBF 핀에 직접 연결될 수 있도록 설계되어있다.
TxnRTS 핀은 내부 풀업 저항 100kΩ (공칭)을 갖는다.
------------------------------------------------------------------------------------------------------
<Message Reception>  메세지 수신
메시지 수신에 필요한 레지스터는 4.2 절 "메시지 수신 레지스터"에 설명되어 있습니다.


- RECEIVE MESSAGE BUFFERING
MCP25625에는 각각 수용 필터를 여러 개 갖춘 2 개의 수신 버퍼가 있습니다. 세 번째 수신 버퍼 역할을하는 별도의 메시지 어셈블리 버퍼 (MAB)도 있습니다 (그림 3-6 참조).


- Message Assembly Buffer
세 개의 수신 버퍼 중 MAB는 항상 버스에서 다음 메시지를 수신하기 위해 최선을 다하고 있습니다.
MAB는 수신 된 모든 메시지를 어셈블합니다. 이러한 메시지는 수용 필터 기준이 충족되는 경우에만 RXBx 버퍼로 전송됩니다 (레지스터 4-12에서 4-17 참조).


- RXB0 and RXB1
RXB0 및 RXB1이라고하는 나머지 두 개의 수신 버퍼는 MAB를 통해 프로토콜 엔진에서 완전한 메시지를 수신 할 수 있습니다. MCU는 하나의 버퍼를 액세스 할 수있는 반면, 다른 버퍼는 메시지 수신 또는 이전에 수신 된 메시지를 유지하는 데 사용할 수 있습니다.

NOTE
메시지가 수락되면 MAB의 전체 내용이 수신 버퍼로 이동합니다. 즉, 식별자 유형 (표준 또는 확장)과 수신 된 데이터 바이트 수에 관계없이 전체 수신 버퍼가 MAB 내용으로 덮어 쓰여집니다.
따라서 버퍼에있는 모든 레지스터의 내용은 메시지를 수신 할 때 수정 된 것으로 가정해야합니다.


******************************************************************************************************
- Receive Flags/interrupts
메시지가 수신 버퍼 중 하나로 이동하면 CANINTF 레지스터의 해당 RXxIF 비트가 설정됩니다. 새 메시지를 버퍼에 수신하려면 이 비트를 MCU가 지워야합니다.
이 비트는 CAN 컨트롤러가 새로운 메시지를 수신 버퍼에로드하려고 시도하기 전에 MCU가 메시지를 완료했는지 확인하기 위해 긍정적 인 잠금 기능을 제공합니다.

CANINTE 레지스터의 RXxIE 비트가 설정되면 INT 핀에 인터럽트가 생성되어 유효한 메시지가 수신되었음을 나타냅니다. 또한 수신 버퍼 풀 핀으로 구성된 경우 관련 RxnBF 핀이 로우로 구동된다. 자세한 내용은 3.7.4 "Rx0BF 및 Rx1BF 핀"을 참조하십시오.

(메세지를 수신하면 Flag=1되고 Flag=0해줘야 새로운 메세지를 받을 수 있다)
******************************************************************************************************

- RXM<1:0> Bits
RXMx 비트가 '11'로 설정된 경우 버퍼는 수락 필터의 값과 관계없이 모든 메시지를 수신합니다.
RXMx 비트를 '01'또는 '10'로 설정하는 것은 권장되지 않습니다.


- Rx0BF AND Rx1BF PINS
다양한 조건에서 MCU에 인터럽트 신호를 제공하는 INT 핀 외에도 RXB0 또는 RXB1에 유효한 메시지가 각각로드되었음을 나타 내기 위해 수신 버퍼 풀 핀 (Rx0BF 및 Rx1BF)을 사용할 수 있습니다. 핀은 세 가지 다른 구성을 가지고 있습니다 (표 3-1 참조).
1. Disabled
2. Buffer Full Interrupt
3. Digital Output


- Disabled
RxnBF 핀은 BFPCTRL 레지스터의 BxBFE 비트를 클리어함으로써 하이 임피던스 상태로 디스 에이블 될 수있다.


- Configured as Buffer Full
RxnBF 핀은 버퍼 풀 인터럽트 핀 또는 표준 디지털 출력으로 작동하도록 구성 할 수 있습니다.
이 핀의 구성 및 상태는 BFPCTRL 레지스터 (레지스터 4-11)를 통해 사용할 수 있습니다. 인터럽트 모드 (BFPCTRL 레지스터의 BxBFE 및 BxBFM 비트 설정)로 작동하도록 설정되면이 핀은 액티브 로우이며 각 수신 버퍼에 대한 CANINTF 레지스터의 RXxIF 비트에 매핑됩니다. 이 비트가 수신 버퍼 중 하나에 대해 하이가되면 (유효한 메시지가 버퍼에로드되었음을 나타냄) 해당 RxnBF 핀이 로우가된다. MCx에 의해 RXxIF 비트가 클리어되면, 다음 메시지가 수신 버퍼에로드 될 때까지 해당 인터럽트 핀이 로직 하이 상태가됩니다.


- Configured as Digital Output
디지털 출력으로 사용될 때, BFPCTRL 레지스터의 BxBFM 비트는 클리어되어야하고 BxBFE 비트는 연관된 버퍼에 대해 설정되어야합니다. 이 모드에서 핀의 상태는 동일한 레지스터의 BxBFS 비트에 의해 제어됩니다. BxBFS 비트에 '1'을 쓰면 관련 버퍼 풀 핀에서 하이 레벨이 구동되고 '0'이면 핀이 로우로 구동된다. 이 모드에서 핀을 사용할 때 핀의 상태는 SPI BIT MODIFY 명령을 사용하여 버퍼 풀 핀 중 하나에서 글리치가 발생하는 것을 방지해야한다.


CONFIGURING RxnBF PINS
BnBFE  BnBFM  BnBFS  Pin Status
 0      X       X      Disabled, high-impedance
 1      1       X      Receive buffer interrupt
 1      0       0      Digital output = 0
 1      0       1      Digital output = 1


------------------------------------------------------------------------------------------------------
 - Interrupt
MCP25625에는 8 개의 인터럽트 소스가 있습니다. CANINTE 레지스터는 각 인터럽트 소스에 대한 개별 인터럽트 인 에이블 비트를 포함합니다.
CANINTF 레지스터는 각 인터럽트 소스에 해당하는 인터럽트 플래그 비트를 포함합니다. 인터럽트가 발생하면 INT 핀은 MCP25625에 의해 로우로 구동되고 MCU에 의해 인터럽트가 클리어 될 때까지 로우로 유지된다. 각각의 조건이 여전히 지속되면 인터럽트를 지울 수 없습니다.

------------------------------------------------------------------------------------------------------
- Oscillator
MCP25625는 MCP25625를 리셋 상태로 유지하는 발진기 스타트 업 타이머 (OST)를 사용하여 내부 상태 머신이 작동하기 전에 발진기가 안정화되었는지 확인합니다.
************************
OST는 파워 업 또는 슬립 모드에서의 웨이크 업이 발생한 후 처음 128 개의 OSC1 클럭 사이클 동안 리셋을 유지한다. OST가 만료 될 때까지 어떠한 SPI 프로토콜 동작도 시도되어서는 안된다는 점에 유의해야한다.

------------------------------------------------------------------------------------------------------
<SPI INTERFACE>
MCP25625는 많은 마이크로 컨트롤러에서 사용할 수있는 SPI (Serial Peripheral Interface) 포트와 직접 인터페이스하도록 설계되었으며 모드 0,0 및 모드 1,1을 지원합니다.
명령 및 데이터는 SI 핀을 통해 디바이스로 보내지며, SCK의 상승 에지에서 데이터가 클록 인된다. 데이터는 SCK의 하강 에지에서 MCP25625 (SO 라인)에 의해 구동된다. 어떤 동작이 수행되는 동안 CS 핀을 로우로 유지해야한다.

MCP25625는 CS를 낮추고 첫 번째 바이트를 명령 / 명령 바이트로 간주합니다. 이는 CS를 올리고 다시 내리고 다른 명령을 호출해야 함을 의미합니다.

<RESET Instruction>
RESET 명령을 사용하여 MCP25625의 내부 레지스터를 다시 초기화하고 구성 모드를 설정할 수 있습니다.
이 명령은 SPI 인터페이스를 통해 RESET 핀과 동일한 기능을 제공합니다. RESET 명령은 CS를 로우로 풀고 명령 바이트를 전송 한 다음 CS를 올려서 장치를 선택해야하는 1 바이트 명령어입니다. 전원 켜기 초기화 순서의 일부로 RESET 명령을 보내거나 RESET 핀을 낮추는 것이 좋습니다.


<READ Instruction>
READ 명령은 CS 핀을 낮추어 시작합니다.
READ 명령은 MCP25625로 보내지고, 그 다음에 8 비트 주소 (A7에서 A0)가옵니다. 다음으로, 선택된 어드레스의 레지스터에 저장된 데이터는 SO 핀에서 쉬프트된다.
데이터의 각 바이트가 이동되면 내부 주소 포인터가 자동으로 다음 주소로 증가합니다.
따라서, 클록 펄스를 계속해서 제공함으로써 다음 연속 레지스터 어드레스를 판독하는 것이 가능하다.
이 방법을 사용하여 임의의 수의 연속 레지스터 위치를 순차적으로 읽을 수 있습니다. READ 동작은 CS 핀을 올려서 종료된다 


-------------------------------------------------------------------------------------------------------------------------------
CAN 컨트롤러는 RxCAN 핀의 하강 에지를 감지하고 웨이크 업 인터럽트가 활성화되면 마이크로 컨트롤러를 인터럽트한다.

