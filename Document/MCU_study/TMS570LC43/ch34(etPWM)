
* 데이터 시트 원문과 함께 보세요. 이상한 번역이 다수 있을 것 같습니다... -_-;;;


Chapter 34

-1712p
Enhanced Pulse Width Modulator (ePWM) Module 향상된 펄스 폭 변조기 (ePWM) 모듈

향상된 펄스 폭 변조기 (ePWM) 주변 장치는 상업 및 산업 장비에서 발견되는 많은 전력 전자 시스템을 제어하는 핵심 요소입니다. ePWM이 지원하는 기능은 특히 디지털 모터 제어에 적합합니다.

34.1 Introduction ................................................................................................... 1713
      소개 
    34.1.1 Submodule Overview
    34.1.2 Register Mapping
 
34.2 ePWM Submodules ......................................................................................... 1717
      ePWM 서브모듈 
    34.2.1 Overview
    34.2.2 Time-Base (TB) Submodule
        34.2.2.1 Purpose of the Time-Base Submodule
        34.2.2.2 Controlling and Monitoring the Time-Base Submodule
        34.2.2.3 Calculating PWM Period and Frequency
           34.2.2.3.1 Time-Base Period Shadow Register
           34.2.2.3.2 Time-Base Clock Synchronization
           34.2.2.3.3 Time-Base Counter Synchronization
        34.2.2.4 Phase Locking the Time-Base Clocks of Multiple ePWM Modules
        34.2.2.5 Time-base Counter Modes and Timing Waveforms
    34.2.3 Counter-Compare (CC) Submodule
        34.2.3.1 Purpose of the Counter-Compare Submodule
        34.2.3.2 Controlling and Monitoring the Counter-Compare Submodule
        34.2.3.3 Operational Highlights for the Counter-Compare Submodule
        34.2.3.4 Count Mode Timing Waveforms
    34.2.4 Action-Qualifier (AQ) Submodule
        34.2.4.1 Purpose of the Action-Qualifier Submodule
        34.2.4.2 Action-Qualifier Submodule Control and Status Register Definitions
        34.2.4.3 Action-Qualifier Event Priority
        34.2.4.4 Waveforms for Common Configurations
    34.2.5 Dead-Band Generator (DB) Submodule
        34.2.5.1 Purpose of the Dead-Band Submodule
        34.2.5.2 Controlling and Monitoring the Dead-Band Submodule
        34.2.5.3 Operational Highlights for the Dead-Band Submodule
     34.2.6 PWM-Chopper (PC) Submodule
        34.2.6.1 Purpose of the PWM-Chopper Submodule
        34.2.6.2 Controlling the PWM-Chopper Submodule
        34.2.6.3 Operational Highlights for the PWM-Chopper Submodule
        34.2.6.4 Waveforms
           34.2.6.4.1 One-Shot Pulse
           34.2.6.4.2 Duty Cycle Control
     34.2.7 Trip-Zone (TZ) Submodule
        34.2.7.1 Purpose of the Trip-Zone Submodule
        34.2.7.2 Controlling and Monitoring the Trip-Zone Submodule
        34.2.7.3 Operational Highlights for the Trip-Zone Submodule
        34.2.7.4 Generating Trip Event Interrupts
     34.2.8 Event-Trigger (ET) Submodule
        34.2.8.1 Operational Overview of the Event-Trigger Submodule
     34.2.9 Digital Compare (DC) Submodule
        34.2.9.1 Purpose of the Digital Compare Submodule
        34.2.9.2 Controlling and Monitoring the Digital Compare Submodule
        34.2.9.3 Operation Highlights of the Digital Compare Submodule
           34.2.9.3.1 Digital Compare Events
           34.2.9.3.2 Event Filtering
     34.2.10 Proper Interrupt Initialization Procedure
     
34.3 Application Examples...................................................................................... 1772
      어플리케이션 예제
    34.3.1 Overview of Multiple Modules
    34.3.2 Key Configuration Capabilities
    34.3.3 Controlling Multiple Buck Converters With Independent Frequencies
    34.3.4 Controlling Multiple Buck Converters With Same Frequencies
    34.3.5 Controlling Multiple Half H-Bridge (HHB) Converters
    34.3.6 Controlling Dual 3-Phase Inverters for Motors (ACI and PMSM)
    34.3.7 Practical Applications Using Phase Control Between PWM Modules

34.4 ePWM Registers ............................................................................................. 1787
      ePWM 레지스터


34.1 Introduction 소개
효과적인 PWM 주변 장치는 최소한의 CPU 오버 헤드 또는 개입으로 복잡한 펄스 폭 파형을 생성 할 수 있어야합니다. 이해하기 쉽고 사용하기 쉽고 고도의 프로그래밍이 가능하고 유연성이 있어야합니다. 여기에 설명된 ePWM 장치는 PWM 채널별로 필요한 모든 타이밍 및 제어 리소스를 할당하여 이러한 요구 사항을 해결합니다. 크로스 커플링 또는 자원 공유가 방지되었습니다. 대신 ePWM은 시스템을 구성하는 데 필요한대로 함께 작동 할 수있는 별도의 자원을 사용하여 더 작은 단일 채널 모듈로 구성됩니다. 이 모듈식 접근법은 직교 아키텍처를 제공하고 주변 구조에 대한 보다 투명한 시각을 제공하여 사용자가 신속하게 작동을 이해할 수 있도록 도와줍니다.

이 문서에서 신호 또는 모듈 이름 내의 문자 x는 장치의 일반 ePWM 인스턴스를 나타내는 데 사용됩니다.
예를 들어 출력 신호 EPWMxA 및 EPWMxB는 ePWMx 인스턴스의 출력 신호를 나타냅니다. 따라서 EPWM1A와 EPWM1B는 ePWM1에 속하며, 마찬가지로 EPWM4A와 EPWM4B는 ePWM4에 속합니다.

   34.1.1 Submodule Overview 서브 모듈 개요
ePWM 모듈은 두 개의 PWM 출력 (EPWMxA 및 EPWMxB)으로 구성된 하나의 완전한 PWM 채널을 나타냅니다. 여러 개의 ePWM 모듈은 그림 34-1과 같이 장치 내에 인스턴스화됩니다. 각 ePWM 인스턴스는 동일하며 1로 시작하는 숫자 값으로 표시됩니다. 예를 들어 ePWM1은 첫 번째 인스턴스이고 ePWM3은 시스템의 세 번째 인스턴스이며 ePWMx는 모든 인스턴스를 나타냅니다.
ePWM 모듈은 필요한 경우 단일 시스템으로 작동 할 수 있는 클록 동기화 구성을 통해 함께 연결됩니다. 또한 이 동기화 체계는 캡처 주변 장치 모듈 (eCAP)까지 확장 될 수 있습니다. 모듈은 독립적으로 작동 할 수도 있습니다.

각 ePWM 모듈은 다음 기능을 지원합니다.
- 주기 및 주파수 제어 기능이 있는 전용 16 비트 타임베이스 카운터
- 다음 구성에서 사용할 수 있는 2 개의 PWM 출력 (EPWMxA 및 EPWMxB)
  .) 단일 에지 동작을 갖는 2 개의 독립적인 PWM 출력
  .) 듀얼 에지 대칭동작을 갖는 2 개의 독립적인 PWM 출력
  .) 듀얼 에지 비대칭 동작을 갖춘 하나의 독립 PWM 출력
- 소프트웨어를 통한 PWM 신호의 비동기 오버라이드 제어
- 다른 ePWM 모듈과 비교하여 래그 또는 리드 동작을 위한 프로그래밍 가능한 위상 제어 지원.
- 사이클 단위로 하드웨어 잠금 (동기화) 위상 관계.
- 독립적인 상승 및 하강 에지 지연 제어 기능을 갖춘 데드 밴드 생성.
- 고장 조건에서 사이클 별 트립과 원샷 트립을 프로그래밍 할 수있는 트립 영역 할당.
- 트립 조건은 PWM 출력에서 하이, 로우 또는 하이 임피던스 상태 로직 레벨을 강제 할 수있다.
- 모든 이벤트는 CPU 인터럽트 및 ADC 시작 변환 (SOC)을 트리거 할 수 있습니다.
- 프로그램 가능한 이벤트 프리 스케일링은 인터럽트에 대한 CPU 오버 헤드를 최소화합니다.
- 펄스 트랜스포머 게이트 드라이브에 유용한 고주파 캐리어 신호에 의한 PWM 초핑(chopping).

각 ePWM 모듈은 그림 34-1에 표시된 입력 / 출력 신호에 연결됩니다. 신호는 이후 섹션에서 자세히 설명합니다.
각 ePWM 모듈은 8 개의 서브 모듈로 구성되며 그림 34-2에 표시된 신호를 통해 시스템 내에서 연결됩니다.

Figure 34-1. Multiple ePWM Modules
Figure 34-2. Submodules and Signal Connections for an ePWM Module
( 아래 해석에 직역되있는 부분이 있습니다. 유의해주세용... = 뒤는 직역되서 나온 단어를 적었습니다.  )
Time-base (TB) module :: = 시간 기반
Counter-compare (CC) module :: = 카운터 비교
Action-qualifier (AQ) module :: = 액션 한정자
Dead-band (DB) module
PWM-chopper (PC) module :: = PWM 쵸퍼
Event-trigger (ET) module :: = 이벤트 트리거
Trip-zone (TZ) module :: = 트립 존
Digital Compare (DC) module :: = 디지털 비교
ePWM 모듈에서 사용되는 주요 신호는 다음과 같습니다.

- PWM 출력 신호 (EPWMxA 및 EPWMxB).
PWM 출력 신호는 장치의 기술 참조 설명서의 IOMM 장에서 설명한대로 IOMM (I / O Multiplexing Module)을 통해 장치 외부에서 사용할 수 있습니다.

- 트립 존 신호 (TZ1 ~ TZ6).
이 입력 신호는 ePWM 모듈 외부의 오류 상태를 ePWM 모듈에 경고합니다. 각 ePWM 모듈은 트립 영역 신호를 사용하거나 무시하도록 구성 할 수 있습니다. TZ1 ~ TZ3 트립 영역 신호는 비동기식 입력으로 구성되거나 VCLK3을 사용하여 이중 동기화되거나 ePWM 모듈에 연결하기 전에 이중 동기화 및 6-VCLK3주기 카운터를 통해 필터링 될 수 있습니다. 이 선택은 IOMM에 레지스터를 구성하여 수행됩니다. TZ4는 거꾸로 된 eQEP1 오류 신호 (EQEP1ERR) 또는 거꾸로 된 eQEP2 오류 신호 (EQEP2ERR) 또는 EQEP1ERR과 EQEP2ERR의 OR 결합에 연결됩니다. 이 선택은 IOMM 레지스터를 통해 수행됩니다.

- 시간축 동기화 입력 (EPWMxSYNCI) 및 출력 (EPWMxSYNCO) 신호.
동기화 신호는 ePWM 모듈을 데이지 체인 방식으로 연결합니다. 각 모듈은 동기화 입력을 사용하거나 무시하도록 구성 할 수 있습니다. 클럭 동기화 입력 및 출력 신호는 ePWM1 (ePWM 모듈 # 1)의 핀에만 제공됩니다. ePWM1 (EPWM1SYNCO)의 동기화 출력은 첫 번째 향상된 캡처 모듈 (eCAP1)의 SYNCI에도 연결됩니다.

- ADC 시작 신호 (EPWMxSOCA 및 EPWMxSOCB).
각 ePWM 모듈에는 두 개의 ADC 시작 신호가 있습니다. 모든 ePWM 모듈이 변환 시작(start of conversion)을 트리거 할 수 있습니다. 어떤 이벤트가 변환 시작을 트리거하는지는 ePWM의 Event-Trigger 하위 모듈에서 구성됩니다.

- Peripheral Bus 주변장치 버스
주변 장치 버스는 32 비트 폭이며 ePWM 레지스터 파일에 16 비트 및 32 비트 쓰기를 허용합니다.


   34.1.2 Register Mapping 레지스터 매핑
전체 ePWM 모듈 제어 및 상태 레지스터 세트는 표 34-1에 표시된 것처럼 하위 모듈별로 그룹화됩니다. 각 레지스터 세트는 ePWM 모듈의 각 인스턴스에 대해 복제됩니다.

Table 34-1. ePWM Module Control and Status Register Set Grouped by Submodule
             서브 모듈별로 그룹화 된 ePWM 모듈 제어 및 상태 레지스터 세트
-> 레지스터의 이름 앞의 두글자에 따라 어느 모듈의 레지스터인지 알 수 있다.

Privileged Mode Write Only?
특권 모드 쓰기 전용인가? 

34.2 ePWM Submodules ePWM 서브모듈 
8 개의 서브 모듈이 모든 ePWM 주변 장치에 포함됩니다. 각 하위 모듈은 소프트웨어로 구성 할 수있는 특정 작업을 수행합니다.

   34.2.1 Overview 개요
표 34-2는 주요 구성 매개 변수 목록과 함께 8 개의 주요 하위 모듈을 나열합니다. 예를 들어, PWM 파형의 듀티 사이클을 조정하거나 제어해야하는 경우 34.2.3 절의 카운터 비교 하위 모듈을 참조하십시오.

Table 34-2. Submodule Configuration Parameters 서브 모듈 구성 매개 변수

Submodule : Configuration Parameter or Option

Time-base (TB) - 시스템 클럭 (VCLK3)을 기준으로 타임베이스 클록 (TBCLK)을 스케일합니다.
                  - PWM 시간-베이스 카운터 (TBCTR) 주파수 또는 주기를 구성하십시오.
                  - 시간 축 카운터의 모드를 설정하십시오 :
                     카운트 업 모드 : 비대칭 PWM에 사용
                     카운트 다운 모드 : 비대칭 PWM에 사용
                     카운트 업 및 다운 모드 : 대칭 PWM에 사용
                  - 다른 ePWM 모듈과 관련된 시간 기준 위상을 구성하세요.
                  - 하드웨어 또는 소프트웨어를 통해 모듈 간의 시간 기준 카운터를 동기화하세요.
                  - 동기화 이벤트 후 시간 축 카운터의 방향 (위 또는 아래)을 구성하세요.
                  - 장치가 에뮬레이터에 의해 중지되었을 때 시간 기준 카운터가 작동하는 방식을 
구성합니다.
                  - ePWM 모듈의 동기화 출력 소스 지정 :
                 동기화 입력 신호
                 제로와 동일한 시간축 카운터
                 카운터 비교 B (CMPB)와 동일한 시간축 카운터
                 출력 동기화 신호가 생성되지 않음

Counter-compare (CC) - 출력 EPWMxA 및 출력 EPWMxB에 대한 PWM 듀티 사이클 지정
                   - EPWMxA 또는 EPWMxB 출력에서 스위칭 이벤트가 발생하는 시간을 지정하십시오

Action-qualifier (AQ) - 시간 기준 또는 하위 비교 하위 모듈 이벤트가 발생할 때 수행 할 작업 유형 지정
                      취한 조치 없음
                      출력 EPWMxA 및 / 또는 EPWMxB가 하이로 스위칭 됨
                      출력 EPWMxA 및 / 또는 EPWMxB가 로우로 스위칭 됨
                      출력 EPWMxA 및 / 또는 EPWMxB 토글 됨
                        - 소프트웨어 제어를 통해 PWM 출력 상태 강제
                        - 소프트웨어를 통해 PWM 데드 밴드 구성 및 제어

Dead-band (DB) -  상하 스위치 간의 전형적인 보완 데드밴드 관계 제어 (?)
Control of traditional complementary dead-band relationship between upper and lower switches
                   - 출력 상승 에지 지연 값 지정
                   - 출력 하강 에지 지연 값 지정
                   - 데드밴드 모듈을 완전히 건너 뜁니다. 이 경우 PWM 파형은 수정없이 통과됩니다.
                   - 이중 해상도를 위해 하프 사이클 클로킹을 활성화하는 옵션.

PWM-chopper (PC) - chopping (반송파) 주파수 생성
                       - 잘게 다진(chopped) 펄스열의 첫 번째 펄스의 펄스 폭.
                       - 두 번째 및 후속 펄스의 듀티 사이클
                       - PWM-chopper 모듈을 완전히 바이 패스합니다. 이 경우 PWM 파형은 수정없이
통과됩니다.

  
[choppy 참고 그림]

Trip-zone (TZ) - 트립 영역 신호 또는 디지털 비교 이벤트 중 하나 또는 모두에 반응하도록 ePWM 모듈을 구성하세요.
                  - 오류가 발생할 때 수행되는 트리핑 동작을 지정하세요.
                 EPWMxA 및 / 또는 EPWMxB를 높게 설정하세요.
                 EPWMxA 및 / 또는 EPWMxB를 낮추세요
                 EPWMxA 및 / 또는 EPWMxB를 하이 임피던스 상태로 설정
                 모든 트립 조건을 무시하도록 EPWMxA 및 / 또는 EPWMxB를 구성하세요.
                  - ePWM이 각 트립 영역 신호에 반응하는 빈도 구성
                    One-shot
                    Cycle-by-cycle
                  - 트립 - 영역이 인터럽트를 시작하도록 함
                  - 트립 - 영역 모듈을 완전히 건너 뜁니다.

Event-trigger (ET) - 인터럽트를 트리거하는 ePWM 이벤트를 사용 가능하게 하세요.
                     - ADC 시작 변환 이벤트를 트리거하는 ePWM 이벤트를 사용 가능하게 하세요.
                     - 이벤트가 트리거를 발생시키는 비율을 지정하세요. 
(매번 발생 또는 매 두 번째 또는 세 번째 발생)
                     - 이벤트 플래그 폴링, 설정 또는 지우기

Digital-compare (DC) - 트립 영역 신호로 이벤트 및 필터링 된 이벤트를 생성 할 수 있습니다.
                        - TBCTR 카운터를 캡처하거나 블링킹(blanking) 윈도우를 생성하는 이벤트 
필터링 옵션 지정

이 장에서는 다양한 ePWM 모듈 구성을 구현하는 방법을 보여주는 코드 예제가 제공됩니다. 이 예에서는 장치 별 헤더 파일 및 주변 장치 예제 소프트웨어 패키지의 장치 EPwm_defines.h 파일에있는 상수 정의를 사용합니다.


   34.2.2 Time-Base (TB) Submodule 타임베이스 (TB) 서브 모듈
각 ePWM 모듈에는 ePWM 모듈의 모든 이벤트 타이밍을 결정하는 고유한 시간 기반 하위 모듈이 있습니다. 내장 된 동기화 로직을 통해 여러 ePWM 모듈의 시간 기반을 단일 시스템으로 함께 사용할 수 있습니다. 그림 34-3은 ePWM 내의 시간축 모듈 위치를 보여줍니다.

Figure 34-3. Time-Base Submodule Block Diagram 타임 베이스 서브 모듈 블록 다이어그램

    34.2.2.1 Purpose of the Time-Base Submodule 타임 베이스  서브 모듈의 목적
다음을 위해 타임 베이스 하위 모듈을 구성 할 수 있습니다.

- ePWM 시간-기반 카운터 (TBCTR) 빈도 또는 주기를 지정하여 이벤트 발생 빈도를 제어하십시오.
- 다른 ePWM 모듈과의 시간 기반 동기화를 관리합니다.
- 다른 ePWM 모듈과의 위상 관계 유지
- 타임베이스 카운터를 카운트 업, 카운트 다운 또는 카운트 업 및 다운 모드로 설정하십시오.
- 다음 이벤트를 생성하십시오 : 
  CTR = PRD: 지정된 주기와 동일한 타임 베이스 카운터 (TBCTR = TBPRD)
  CTR = Zero: 0과 동일한 시간축 카운터 (TBCTR = 0x0000)

타임 베이스 클록의 속도를 구성하십시오. (디바이스 주변 장치 클록 도메인 (VCLK3)의 프리 스케일 버전) 이렇게 하면 타임 베이스 카운터가 느린 속도로 증가 / 감소 할 수 있습니다.

    34.2.2.2 Controlling and Monitoring the Time-Base Submodule  타임 베이스 하위 모듈 제어 및 모니터링
표 34-3은 타임 베이스 서브 모듈을 제어하고 모니터하는 데 사용되는 레지스터를 보여줍니다.

Table 34-3. Time-Base Submodule Registers

그림 34-4는 타임 베이스 서브 모듈의 중요한 신호와 레지스터를 보여줍니다. 표 34-4는 타임 베이스 서브 모듈과 관련된 주요 신호에 대한 설명을 제공합니다.

Figure 34-4. Time-Base Submodule Signals and Registers
이 신호는 디지털 비교 (DC) 하위 모듈에 의해 생성됩니다.

Table 34-4. Key Time-Base Signals -> 타임베이스 서브모듈과 관련된 주요 신호에 대한 설명 
Signal : Description

EPWMxSYNCI : 타임 베이스 동기화 입력.
             : 동기화 체인의 이전에 ePWM 모듈의 카운터와 시간 기준 카운터를 동기화하는 데 사용되는 입력 펄스. ePWM 주변 장치는이 신호를 사용하거나 무시하도록 구성 할 수 있습니다. 첫 번째 ePWM 모듈 (EPWM1)의 경우 이 신호는 장치 핀 또는 N2HET1 모듈에서 제공됩니다. 후속 ePWM 모듈의 경우 이 신호는 다른 ePWM 주변 장치에서 전달됩니다. 예를 들어, EPWM2SYNCI는 ePWM1 주변 장치에 의해 생성되고, EPWM3SYNCI는 ePWM2에 의해 생성됩니다. 특정 장치의 동기화 순서에 대한 정보는 34.2.2.3.3 절을 참조하십시오.

EPWMxSYNCO : 타임 베이스 동기화 출력.
                  : 이 출력 펄스는 나중에 동기화 체인에서 ePWM 모듈의 카운터를 동기화하는 데 
사용됩니다. 
                    ePWM 모듈은 세 가지 이벤트 소스 중 하나에서 이 신호를 생성합니다.
                  1. EPWMxSYNCI (동기 입력 펄스)
                  2. CTR = Zero: 제로와 동일한 타임베이스 카운터 (TBCTR = 0x0000)
                  3. CTR = CMPB: 타임베이스 카운터는 counter-compare B 레지스터(TBCTR = CMPB)와 
같습니다. 

CTR = PRD : 지정된 주기와 동일한 타임 베이스 카운터.
               : 이 신호는 counter 값이 active period 레지스터 값과 같을 때마다 생성됩니다. 
TBCTR = TBPRD 일 때 입니다.

CTR = Zero : 제로와 동일한 타임 베이스 카운터
                : 이 신호는 카운터 값이 0 일 때마다 생성됩니다. TBCTR이 0x0000 일 때입니다.

CTR = CMPB : active counter-compare B 레지스터 (TBCTR = CMPB)와 동일한 타임베이스 카운터.
                  : 이 이벤트는 counter-compare 서브 모듈에 의해 생성되고 동기화 아웃 로직에 의해 
사용됩니다              

CTR_dir : 타임 베이스 카운터 방향.
        : ePWM의 타임 베이스 카운터의 현재 방향을 나타냅니다. 이 신호는 카운터가 증가 할 때 높고 
감소 할 때 낮습니다. -> 카운터가 증가하고 감소하는게 무슨 영향이 있지?

CTR_max : 타임베이스 카운터는 최대 값과 같습니다. (TBCTR = 0xFFFF)
          : TBCTR 값이 최대 값에 도달하면 생성되는 이벤트입니다. 이 신호는 상태 비트로만 사용됩니다

TBCLK : 타임베이스 클록
       : 이것은 시스템 클럭 (VCLK3)의 프리 스케일 버전이며 ePWM 내의 모든 서브 모듈에서
사용됩니다. 
        이 클럭은 시간축 카운터가 증가 또는 감소하는 속도를 결정합니다

    34.2.2.3 Calculating PWM Period and Frequency PWM주기 및 주파수 계산
PWM 이벤트의 빈도는 time-base period (TBPRD) 레지스터와 타임베이스 카운터의 모드에 의해 제어됩니다. 그림 34-5는 주기가 4 (TBPRD = 4)로 설정된 경우 업 카운트, 다운 카운트 및 업 다운 카운트 타임베이스 카운터 모드의 주기 (Tpwm) 및 주파수 (Fpwm) 관계를 보여줍니다. 각 단계의 시간 증가분은 시스템 클럭 (VCLK3)의 프리스케일 버전인 타임베이스 클럭 (TBCLK)에 의해 정의됩니다.

- 업 - 다운 카운트 모드 : 업 - 다운 카운트 모드에서 타임베이스 카운터는 0부터 시작하여 주기 (TBPRD) 값에 도달 할 때까지 증가합니다. 마침표 값에 도달하면 타임베이스 카운터는 0에 도달 할 때까지 감소합니다. 이 시점에서 카운터는 패턴을 반복하고 증가하기 시작합니다.

- 업 카운트 모드 : 이 모드에서 타임 베이스 카운터는 0부터 시작하여 주기 레지스터 (TBPRD)의 값에 도달 할 때까지 증가합니다. 주기 값에 도달하면 시간축 카운터가 0으로 재설정되고 다시 한 번 증가하기 시작합니다.

- 다운 카운트 모드 : 다운 카운트 모드에서 타임베이스 카운터는 주기 (TBPRD) 값에서 시작하여 0에 도달 할 때까지 감소합니다. 0에 도달하면 시간축 카운터가 주기 값으로 재설정되고 다시 한 번 감소하기 시작합니다.

     34.2.2.3.1 Time-Base Period Shadow Register 
time-base period 레지스터 (TBPRD)에는 음영 레지스터가 있습니다. 음영 처리를 사용하면 레지스터 업데이트를 하드웨어와 동기화 할 수 있습니다. 다음 정의는 ePWM 모듈의 모든 섀도우 레지스터를 설명하는 데 사용됩니다.

Active Register : Active Register는 하드웨어를 제어하며 하드웨어가 유발하거나 호출하는 동작을 담당합니다
Shadow Register : Shadow Register는 Active Register의 버퍼를 일시적으로 유지하거나 버퍼링합니다. 모든 제어 하드웨어에 직접적인 영향을 미치지 않습니다. 전략적 시점에서 Shadow Register의 내용은 Active Register로 전송됩니다. 이렇게 하면 레지스터가 소프트웨어에 의해 비동기 적으로 수정되기 때문에 손상이나 잘못된 동작을 방지 할 수 있습니다.

Figure 34-5. Time-Base Frequency and Period 타임베이스 주파수 및 주기 

shadow period 레지스터의 메모리 주소는 active 레지스터와 동일합니다. 어떤 레지스터가 쓰여지거나 읽히는지는 TBCTL [PRDLD] 비트에 의해 결정됩니다. 이 비트는 다음과 같이 TBPRD shadow 레지스터를 활성화 및 비활성화합니다.

- Time-Base Period Shadow Mode:
TBPRD Shadow 레지스터는 TBCTL [PRDLD] = 0 일 때 활성화됩니다. TBPRD 메모리 주소에 대한 읽기 및 쓰기는 Shadow 레지스터로 이동합니다. 타임베이스 카운터가 0 인 경우 (TBCTR = 0x0000) Shadow 레지스터 내용이 활성 레지스터 (TBPRD (활성) ← TBPRD (섀도우))로 전송됩니다. 기본적으로 TBPRD Shadow 레지스터가 활성화 됩니다.
-> 즉, 해당모드의 경우 TBPRD의 값을 Active로 보내기전 Shadow를 거친다고 보면 됨
   TBCTR이 0이 되면 해당 값을 Active로 보냄. 
( 오류 없이 카운터가 0이 되면 TBPRD의 값을 전달한다 생각하자)

- Time-Base Period Immediate Load Mode:
즉시 로드 모드가 선택되면 (TBCTL [PRDLD] = 1), TBPRD 메모리 어드레스로부터의 읽기 또는 쓰기는 Active 레지스터로 직접 전달 됩니다.
-> TBPRD값은 바로 Active로 전달됨

     34.2.2.3.2 Time-Base Clock Synchronization 타임베이스 클록 동기화
장치 레벨 멀티플렉싱 제어 모듈 (IOMM) 레지스터의 비트 중 하나인 PINMMR166은 TBCLKSYNC 비트로 정의됩니다. TBCLKSYNC 비트를 사용하면 사용 가능한 모든 ePWM 모듈을 TBCLK (Time-Base Clock)에 전역적으로 동기화 할 수 있습니다. 설정되면 활성화 된 모든 ePWM 모듈 클럭이 TBCLK의 첫 번째 상승 에지와 정렬되어 시작됩니다. 완벽하게 동기화 된 TBCLK의 경우 각 ePWM 모듈의 프리스케일러가 동일하게 설정되어야합니다. 
-> TBCLKSYNC 비트를 못찾겠당… PINMMR166[1] 이라는데.. 쩝. / PINMMR의 3A8에 위치하는 비트


ePWM 클록을 활성화하는 적절한 절차는 다음과 같습니다 : 
1. 각 ePWM 모듈 인스턴스에 대해 IOMM 제어 레지스터를 사용하여 ePWM 모듈 클럭 활성화
2. TBCLKSYNC = 0으로 설정하십시오. 그러면 모든 활성화 된 ePWM 모듈 내의 타임베이스 클럭이 중지됩니다.
3. ePWM 모듈 구성 : 프리스케일러 값 및 ePWM 모드.
4. TBCLKSYNC = 1로 설정하세요.

     34.2.2.3.3 Time-Base Counter Synchronization 타임베이스 카운터 동기화
타임베이스 동기화 구성표는 장치의 모든 ePWM 모듈을 연결합니다. 각 ePWM 모듈에는 동기화 입력 (EPWMxSYNCI)과 동기화 출력 (EPWMxSYNCO)이 있습니다. 첫 번째 인스턴스 (ePWM1)의 입력 동기화는 외부 핀에서 이루어집니다. 나머지 ePWM 모듈의 동기화 연결은 그림 34-6에 나와 있습니다.

Figure 34-6. Time-Base Counter Synchronization Scheme  타임베이스 카운터 동기화 도식표

각 ePWM 모듈은 동기화 입력을 사용하거나 무시하도록 구성 할 수 있습니다. TBCTL [PHSEN] 비트가 설정되고 다음 조건 중 하나가 발생하면 ePWM 모듈의 타임베이스 카운터 (TBCTR)에 위상 레지스터 (TBPHS) 내용이 자동으로 로드됩니다.

- EPWMxSYNCI: 동기화 입력 펄스
입력 동기화 펄스가 감지되면 위상 레지스터의 값이 카운터 레지스터에 로드됩니다 (TBPHS → TBCTR). 이 작업은 다음 유효한 타임베이스 클럭(TBCLK) 에지에서 발생합니다.
내부 마스터 모듈에서 슬레이브 모듈까지의 지연 시간은 다음과 같습니다.
 – if ( TBCLK = VCLK3): 2 x VCLK3
 – if ( TBCLK != VCLK3): 1 TBCLK

- 소프트웨어 강제 동기화 펄스 :
TBCTL [SWFSYNC] 제어 비트에 1을 쓰면 소프트웨어 강제 동기화가 호출됩니다. 이 펄스는 동기화 입력 신호와 OR 연산을하므로 EPWMxSYNCI 의 펄스와 동일한 효과를냅니다.

- 디지털 비교 이벤트 동기화 펄스 :
DCAEVT1 및 DCBEVT1 디지털 비교 이벤트는 EPWMxSYNCI와 동일한 영향을 미치는 동기화 펄스를 생성하도록 구성 할 수 있습니다.

이 기능을 사용하면 ePWM 모듈을 다른 ePWM 모듈의 시간 기준에 자동으로 동기화 할 수 있습니다. 서로 다른 ePWM 모듈에서 생성 된 파형에 리드 또는 지연 위상 제어를 추가하여 동기화 할 수 있습니다. 업 - 카운트 모드에서 TBCTL [PSHDIR] 비트는 동기화 이벤트 직후 타임베이스 카운터의 방향을 구성합니다. 새 방향은 동기화 이벤트 이전의 방향과 관계가 없습니다. 카운트 업 또는 카운트 다운 모드에서는 PHSDIR 비트가 무시됩니다. 예제는 그림 34-7에서 그림 34-10을 참조하십시오.

TBCTL [PHSEN] 비트를 지우면 ePWM이 동기화 입력 펄스를 무시하도록 구성됩니다. 동기화 펄스는 여전히 EPWMxSYNCO로 흐르도록 허용 될 수 있으며 다른 ePWM 모듈을 동기화하는 데 사용될 수 있습니다. 이 방법으로 마스터 타임베이스 (예 : ePWM1)를 설정하고 다운 스트림 모듈 (ePWM2 - ePWMx)을 마스터와 동기화하여 실행하도록 선택할 수 있습니다.

    34.2.2.4 Phase Locking the Time-Base Clocks of Multiple ePWM Modules 
            여러 ePWM 모듈의 타임 베이스 클록 위상 고정
TBCLKSYNC 비트는 장치에서 활성화 된 모든 ePWM 모듈의 타임베이스 클럭을 전역으로 동기화하는 데 사용할 수 있습니다. TBCLKSYNC = 0이면 모든 ePWM 모듈의 타임베이스 클럭이 중지됩니다 (기본값). TBCLKSYNC = 1 일 때, 모든 ePWM 타임베이스 클록은 TBCLK의 상승 에지가 정렬 된 채로 시작됩니다. 완벽하게 동기화 된 TBCLK의 경우, 각 ePWM 모듈의 TBCTL 레지스터의 프리스케일러 비트는 동일하게 설정되어야합니다. 

ePWM 클록을 활성화하는 적절한 절차는 다음과 같습니다. (34.2.2.3.2의 내용과 같다)
1. 각 ePWM 모듈 인스턴스에 대해 IOMM 제어 레지스터를 사용하여 ePWM 모듈 클럭 활성화
2. TBCLKSYNC = 0으로 설정하십시오. 그러면 모든 활성화 된 ePWM 모듈 내의 타임베이스 클럭이 중지됩니다.
3. ePWM 모듈 구성 : 프리스케일러 값 및 ePWM 모드.
4. TBCLKSYNC = 1로 설정하세요 .

    34.2.2.5 Time-base Counter Modes and Timing Waveforms 타임베이스 카운터 모드 및 타이밍 파형
타임베이스 카운터는 네 가지 모드 중 하나에서 작동합니다.
- 비대칭 업 카운트 모드
- 비대칭 다운 카운트 모드
- 대칭 업-다운 카운트
- 타임베이스 카운터가 현재 값에서 일정하게 유지되는 고정
  ( Frozen where the time-base counter is held constant at the current value )
처음 세 가지 모드의 작동을 설명하기 위해 다음 타이밍 다이어그램은 이벤트가 생성되는 시기와 시간 기반이 EPWMxSYNCI 신호에 응답하는 방법을 보여줍니다.

Figure 34-7. Time-Base Up-Count Mode Waveforms 타임베이스 업 카운트 모드의 파형
Figure 34-8. Time-Base Down-Count Mode Waveforms 타임베이스 다운 카운트 모드의 파형
Figure 34-9. Time-Base Up-Down-Count Waveforms, 타임베이스 업-다운 카운트 파형
              TBCTL[PHSDIR = 0] Count Down On Synchronization Event 
TBCTL [PHSDIR = 0] 동기화 이벤트에서 카운트 다운
Figure 34-10. Time-Base Up-Down Count Waveforms, 타임베이스 업-다운 카운트 파형
               TBCTL[PHSDIR = 1] Count Up On Synchronization Event
TBCTL [PHSDIR = 1]  동기화 이벤트에서 카운트 업


  34.2.3 Counter-Compare (CC) Submodule
그림 34-11은 ePWM 내의 카운터 비교 하위 모듈을 보여줍니다.
그림 34-12는 카운터 비교 서브 모듈의 기본 구조를 보여줍니다.

Figure 34-11. Counter-Compare Submodule
Figure 34-12. Detailed View of the Counter-Compare Submodule 카운터-비교 하위 모듈의 상세보기 

    34.2.3.1 Purpose of the Counter-Compare Submodule 카운터-비교 서브 모듈의 목적
카운터-비교 하위 모듈은 타임 베이스 카운터 값을 입력으로 받습니다. 이 값은 카운터-비교 A (CMPA) 및 카운터-비교 B (CMPB) 레지스터와 계속 비교됩니다. 타임베이스 카운터가 비교 레지스터 중 하나와 같을 때, 카운터-비교 유닛은 적절한 이벤트를 생성합니다.

The counter-compare: 
- CMPA 및 CMPB 레지스터를 사용하여 프로그래밍 가능한 타임 스탬프를 기반으로 이벤트를 생성합니다.
  - CTR = CMPA : 타임베이스 카운터는 카운터-비교 A 레지스터와 같습니다 (TBCTR = CMPA).
  - CTR = CMPB : 타임베이스 카운터는 카운터 비교 B 레지스터와 동일합니다 (TBCTR = CMPB)
- 동작-한정자(action-qualifier) 서브 모듈이 적절하게 구성된 경우 PWM 듀티 사이클을 제어합니다.
- 활성 PWM 사이클 동안 손상 또는 작은 고장(글리치)을 방지하기 위해 새로운 비교 값을 음영 처리합니다.

    34.2.3.2 Controlling and Monitoring the Counter-Compare Submodule 카운터 비교 하위 모듈 제어 및 모니터링
카운터-비교 서브 모듈 연산은 표 34-5에 나열된 레지스터에 의해 제어되고 모니터링됩니다.
카운터-비교 하위 모듈과 관련된 주요 신호는 표 34-6에 설명되어 있습니다.

Table 34-5. Counter-Compare Submodule Registers

Table 34-6. Counter-Compare Submodule Key Signals
Signal : Description of Event : Registers Compared
CTR = CMPA : 활성 카운터-비교 A 값과 동일한 시간 기준 카운터 : TBCTR = CMPA
CTR = CMPB : 활성 카운터-비교 B 값과 동일한 시간 기준 카운터 : TBCTR = CMPB
CTR = PRD : 활성 주기와 동일한 타임베이스 카운터.
        shadow 레지스터에서 활성 카운터-비교 A 및 B 레지스터를 로드하는 데 사용됩니다. (?) : 
TBCTR = TBPRD
( Time-base counter equal to the active period. Used to load active counter-compare A and B registers from the shadow register )
CTR = ZERO : 0과 동일한 타임베이스 카운터. shadow 레지스터에서 활성 카운터-비교 A 및 B 레지스터를 로드하는 데 사용됩니다. (?)
TBCTR = 0x0000
( Time-base counter equal to zero. Used to load active counter-compare A and B registers from the shadow register )

    34.2.3.3 Operational Highlights for the Counter-Compare Submodule 카운터-비교 하위 모듈의 주요 기능
 카운터-비교 하위 모듈은 두 개의 비교 레지스터를 기반으로 두 개의 독립적인 비교 이벤트를 생성합니다.

1. CTR = CMPA: 카운터-비교 A 레지스터와 동일한 타임베이스 카운터 (TBCTR = CMPA)
2. CTR = CMPB: 카운터-비교 B 레지스터와 동일한 타임베이스 카운터 (TBCTR = CMPB)

업 카운트 또는 다운 카운트 모드의 경우 각 이벤트는 한 사이클에 한 번만 발생합니다. 업 - 다운 카운트 모드의 경우 각 이벤트는 비교 값이 0x0000-TBPRD 사이 일 경우 사이클 당 두 번 발생하고 비교 값이 0x0000 또는 TBPRD와 같으면 사이클 당 한 번 발생합니다. 이러한 이벤트는 카운터 방향에 의해 규정되고 활성화 된 경우 액션으로 변환되는 action-qualifier 서브 모듈로 공급됩니다. 
자세한 내용은 34.2.4.1 절을 참조하십시오.

카운터 비교 레지스터 CMPA 및 CMPB는 각각 연관된 shadow 레지스터를 갖는다. Shadowing은 하드웨어와 동기화된 레지스터 업데이트를 유지하는 방법을 제공합니다. Shadowing이 사용되는 경우, active 레지스터에 대한 업데이트는 전략적 포인트에서만 발생합니다.
이렇게하면 레지스터가 소프트웨어에 의해 비동기적으로 수정되기 때문에 손상이나 잘못된 동작을 방지 할 수 있습니다.active 레지스터와 shadow 레지스터의 메모리 주소는 동일합니다. 어떤 레지스터가 쓰여지거나 읽히는지는 CMPCTL [SHDWAMODE] 및 CMPCTL [SHDWBMODE] 비트에 의해 결정됩니다. 이 비트들은 CMPA shadow 레지스터와 CMPB shadow 레지스터를 각각 활성화하고 비활성화합니다. 두 가지 로드 모드의 동작은 다음과 같습니다.

Shadow Mode:
CMPA의 shadow 모드는 CMPCTL [SHDWAMODE] 비트를 지우고 CMPB의 shadow 레지스터를 CMPCTL [SHDWBMODE] 비트를 지우면 활성화됩니다. shadow 모드는 CMPA 및 CMPB 모두에 기본적으로 사용됩니다.
shadow 레지스터가 활성화되면 shadow 레지스터의 내용은 CMPCTL [LOADAMODE] 및 CMPCTL [LOADBMODE] 레지스터 비트에 지정된 다음 이벤트 중 하나에서 active 레지스터로 전송됩니다.

- CTR = PRD : 주기와 동일한 타임베이스 카운터 (TBCTR = TBPRD)
- CTR = Zero : 제로와 동일한 타임베이스 카운터 (TBCTR = 0x0000)
- Both CTR = PRD and CTR = Zero

active 레지스터 내용만 카운터-비교 하위 모듈에 의해 사용되어 action-qualifier에 보낼 이벤트를 생성합니다

Immediate Load Mode:
즉시로드 모드가 선택되면 (TBCTL [SHADWAMODE] = 1 또는 TBCTL [SHADWBMODE] = 1) 레지스터에 대한 읽기 또는 쓰기가 active 레지스터로 직접 이동합니다.


    34.2.3.4 Count Mode Timing Waveforms  카운트 모드 타이밍 파형
카운터-비교 모듈은 세 가지 모든 카운트 모드에서 비교 이벤트를 생성 할 수 있습니다.

- 업 카운트 모드 : 비대칭 PWM 파형을 생성하는 데 사용됩니다.
- 다운 카운트 모드 : 비대칭 PWM 파형을 생성하는 데 사용됩니다.
- 업 - 다운 카운트 모드 : 대칭 PWM 파형을 생성하는 데 사용됩니다.

처음 세 가지 모드의 작동을 설명하기 위해 그림 34-13에서 그림 34-16의 타이밍 다이어그램은 이벤트가 생성되는 시기와 EPWMxSYNCI 신호가 상호 작용하는 방식을 보여줍니다.

Figure 34-13. Counter-Compare Event Waveforms in Up-Count Mode
Figure 34-14. Counter-Compare Events in Down-Count Mode
Figure 34-15. Counter-Compare Events In Up-Down-Count Mode, 
                TBCTL[PHSDIR = 0] Count Down On Synchronization Event
Figure 34-16. Counter-Compare Events In Up-Down-Count Mode, 
                TBCTL[PHSDIR = 1] Count Up On Synchronization Event



  34.2.4 Action-Qualifier (AQ) Submodule
그림 34-17은 ePWM 시스템의 action-qualifier(AQ) 하위 모듈 (음영 처리 된 블록 참조)을 보여줍니다.
action-qualifier 서브 모듈은 파형 생성 및 PWM 생성에서 가장 중요한 역할을 합니다. 어떤 이벤트가 다양한 동작 유형으로 변환되는지 결정하여 EPWMxA 및 EPWMxB 출력에서 필요한 스위치 파형을 생성합니다.

Figure 34-17. Action-Qualifier Submodule

    34.2.4.1 Purpose of the Action-Qualifier Submodule Action-Qualifier 서브 모듈의 목적
action-qualifier 하위 모듈은 다음을 담당합니다 : 

- 다음 이벤트를 기반으로 작업을 검증 및 생성 (설정, 지우기, 전환)합니다.
  CTR = PRD: 주기와 동일한 타임베이스 카운터 (TBCTR = TBPRD)
  CTR = Zero: 제로와 동일한 타임베이스 카운터 (TBCTR = 0x0000)
  CTR = CMPA: 카운터-비교 A 레지스터와 동일한 타임베이스 카운터 (TBCTR = CMPA)
  CTR = CMPB: 카운터-비교 B 레지스터와 동일한 타임베이스 카운터 (TBCTR = CMPB)
- 이러한 이벤트가 동시에 발생하면 우선 순위 관리
- 타임베이스 카운터가 증가하고 감소하는 경우 이벤트를 독립적으로 제어합니다.

    34.2.4.2 Action-Qualifier Submodule Control and Status Register Definitions 
             Action-Qualifier 서브 모듈 제어 및 상태 레지스터 정의
action-qualifier 서브 모듈 작동은 표 34-7의 레지스터를 통해 제어되고 모니터링됩니다.

Table 34-7. Action-Qualifier Submodule Registers

action-qualifier 하위 모듈은 이벤트 기반 논리를 기반으로합니다. 이것은 입력시 이벤트 및 출력시 조치가 있는 프로그래밍 가능한 교차 스위치로 생각할 수 있습니다. 이 스위치는 모두 표 34-7에 나와있는 레지스터 세트를 통해 소프트웨어로 제어됩니다.

Figure 34-18. Action-Qualifier Submodule Inputs and Outputs

가능한 입력 이벤트는 표 34-8에 다시 요약되어 있습니다.

Table 34-8. Action-Qualifier Submodule Possible Input Events 동작 한정자 서브 모듈 가능한 입력 이벤트

Signal : Description : Registers Compared
CTR = PRD : 주기 값과 동일한 시간축 카운터 : TBCTR = TBPRD
CTR = Zero : 제로와 동일한 시간축 카운터 : TBCTR = 0x0000
CTR = CMPA : 타임베이스 카운터가 카운터-비교 A와 같습니다. : TBCTR = CMPA
CTR = CMPB : 타임베이스 카운터는 카운터-비교 B와 같습니다. : TBCTR = CMPB
Software forced event : 소프트웨어에 의해 시작된 비동기 이벤트
소프트웨어 강제 이벤트

소프트웨어 강제 작업은 유용한 비동기 이벤트입니다. 이 제어는 레지스터 AQSFRC 및 AQCSFRC에 의해 처리됩니다.

action-qualifier 서브 모듈은 특정 이벤트가 발생할 때 두 출력 EPWMxA 및 EPWMxB의 동작을 제어합니다. action-qualifier 서브 모듈에 대한 이벤트 입력은 반대 방향 (위 또는 아래)으로 더 자격이 부여됩니다. 이를 통해 카운트 업 및 카운트 다운 단계에서 독립적인 조치를 취할 수 있습니다.


출력 EPWMxA 및 EPWMxB에 부과 된 가능한 조치는 다음과 같습니다 : 

- Set High: 출력 EPWMxA 또는 EPWMxB를 하이 레벨로 설정하십시오.
- Clear Low: 출력 EPWMxA 또는 EPWMxB를 로우 레벨로 설정하십시오.
- Toggle: EPWMxA 또는 EPWMxB가 현재 하이로 풀리면 출력을 로우로 끌어 올린다. 
            EPWMxA 또는 EPWMxB가 현재 로우로 당겨지면, 출력을 하이로 끌어 올린다.
- Do Nothing: EPWMxA 및 EPWMxB 출력을 현재 설정된 것과 동일한 레벨로 유지하십시오. 

"아무 것도하지 않음" 옵션으로 이벤트가 EPWMxA 및 EPWMxB 출력에서 조치를 일으키는 것을 방지 할 수 있지만 이 이벤트는 여전히 인터럽트 및 ADC 변환 시작(start of conversion 의미가 뭔진 모르겠지만.. 뒤에서 이 용어가 자주 나옵니다. )을 트리거 할 수 있습니다. 자세한 내용은 34.2.8 절의 이벤트 트리거 하위 모듈 설명을 참조하십시오.

동작은 두 출력 (EPWMxA 또는 EPWMxB)에 대해 독립적으로 지정됩니다. 모든 또는 모든 이벤트는 주어진 출력에 대해 조치를 생성하도록 구성 될 수 있습니다. 예를 들어, CTR = CMPA 및 CTR = CMPB는 출력 EPWMxA에서 작동 할 수 있습니다. 모든 action-qualifier은 이 섹션 끝 부분에 있는 제어 레지스터를 통해 구성됩니다.

명확하게 하기 위해 이 문서의 그림은 일련의 상징적인 동작을 사용합니다. 이 기호는 그림 34-19에 요약되어 있습니다. 각 기호는 작업을 시간의 마커로 나타냅니다. CMPA 및 CMPB 동작이 이동 가능하고 시간 위치가 각각 카운터-비교 A 및 B 레지스터를 통해 프로그래밍되는 동안 일부 동작은 시간 (0 및 주기)으로 고정됩니다. 동작을 끄거나 비활성화하려면 "아무 것도하지 않음" 옵션을 사용하세요. 재설정시 기본값입니다.









Figure 34-19. Possible Action-Qualifier Actions for EPWMxA and EPWMxB Outputs
               EPWMxA 및 EPWMxB 출력에 대한 가능한 Action-Qualifier 동작

 
   34.2.4.3 Action-Qualifier Event Priority Action-Qualifier 이벤트 우선순위
ePWM action qualifier는 동시에 둘 이상의 이벤트를 수신 할 수 있습니다. 이 경우 이벤트는 하드웨어에 의해 우선순위가 지정됩니다. 
일반적인 규칙은 나중에 발생하는 이벤트가 더 높은 우선 순위를 가지며 소프트웨어 강제 이벤트가 항상 최우선 순위를 갖습니다. updown-count 모드의 이벤트 우선 순위 수준은 표 34-9에 나와 있습니다. 우선 순위 레벨 1이 가장 높은 우선 순위이고, 레벨 7이 가장 낮습니다. 우선 순위는 TBCTR의 방향에 따라 약간 변경됩니다.

Table 34-9. Action-Qualifier Event Priority for Up-Down-Count Mode

Priority Level : 
이벤트 TBCTR이 증가하는 경우 TBCTR = 0부터 TBCTR = TBPRD까지 : 
이벤트 TBCTR이 TBCTR = TBPRD에서 TBCTR = 1로 감소하는 경우 

1 (Highest) : 소프트웨어 강제 이벤트 : 소프트웨어 강제 이벤트
2 : 카운터는 업 카운트시 CMPB와 같습니다. (CBU) : 카운터는 다운 카운트시 CMPB와 같습니다. (CBD)
3 : 카운터는 업 카운트 시 CMPA와 같습니다. (CAU) : 카운터는 다운 카운트 시 CMPA와 같습니다. (CAD)
4 : 카운터는 0입니다. : 카운터는 주기와 동등합니다. (TBPRD)
5 : 카운터는 다운 카운트시 CMPB와 같습니다. (CBD) : 카운터는 업 카운트 시 CMPB와 같습니다. (CBU)
6 (Lowest) : 카운터는 다운 카운트 시 CMPA와 같습니다. (CAD) : 카운터는 업 카운트 시 CMPA와 같습니다. (CBU)


표 34-10은 up-count 모드에 대한 action-qualifier 우선 순위를 보여줍니다. 이 경우 카운터 방향은 항상 up으로 정의되므로 down-count 이벤트는 절대 수행되지 않습니다.

Table 34-10. Action-Qualifier Event Priority for Up-Count Mode

Priority Level : Event
1 (Highest) : 소프트웨어 강제 이벤트
2 : 주기와 동등한 카운터 (TBPRD)
3 : 업 카운트 시 CMPB와 동일한 카운터 (CBU)
4 : 업 카운트 시 CMPA와 동일한 카운터 (CAU)
5 (Lowest) : 카운터는 0과 같습니다.


표 34-11은 다운 카운트 모드의 action-qualifier 우선 순위를 보여줍니다. 이 경우 카운터 방향은 항상 다운으로 정의되므로 업 카운트 이벤트가 발생하지 않습니다.

Table 34-11. Action-Qualifier Event Priority for Down-Count Mode

Priority Level : Event 
1 (Highest) : 소프트웨어 강제 이벤트
2 : 카운터는 0과 같습니다.
3 : 다운 카운트 시 CMPB와 동일한 카운터 (CBD)
4 : 다운 카운트 시 CMPA와 동일한 카운터 (CAD)
5 (Lowest) : 주기와 동등한 카운터 (TBPRD)

비교 값을 주기보다 크게 설정할 수 있습니다. 이 경우 작업은 표 34-12와 같이 수행됩니다.
Table 34-12. Behavior if CMPA/CMPB is Greater than the Period
              CMPA/CMPB가 주기보다 컸을때의 동작

Counter Mode : 
Compare on Up-Count Event CAD/CBD : 
Compare on Down-Count Event CAD/CBD

Up-Count Mode : CMPA / CMPB ≤ TBPRD 주기 인 경우, 이벤트는 비교 일치 
(TBCTR = CMPA or CMPB)시 발생합니다. 
                     CMPA / CMPB > TBPRD이면 이벤트가 발생하지 않습니다.
                    : Down-Count 가 발생하지 않음
Down-Count Mode : Up-Count 가 발생하지 않음
                        : CMPA / CMPB < TBPRD 인 경우, 이벤트는 비교 일치 (TBCTR = CMPA or CMPB)시 
발생합니다.  
                        CMPA / CMPB ≥ TBPRD 인 경우, 이벤트는 주기와 일치 (TBCTR = TBPRD)시
 발생합니다.
Up-Down-Count : CMPA / CMPB < TBPRD 이고 카운터가 증가하는 경우, 이벤트는 비교 일치 
(TBCTR = CMPA or CMPB)에서 발생합니다. 
                  CMPA / CMPB가 TBPRD 이상인 경우 해당 주기 동안 이벤트가 발생합니다 
(TBCTR = TBPRD).
                : CMPA / CMPB < TBPRD이고 카운터가 감소하는 경우, 이벤트는 비교 일치 
(TBCTR = CMPA or CMPB)에서 발생합니다.
                     CMPA / CMPB ≥ TBPRD 인 경우, 해당 주기 동안 이벤트가 발생합니다 
(TBCTR = TBPRD)

   34.2.4.4 Waveforms for Common Configurations 공통 구성에 대한 파형 

NOTE: 이 문서의 파형은 정적 비교 레지스터 값에 대한 ePWM 동작을 보여줍니다. 실행중인 시스템에서 활성 비교 레지스터 (CMPA 및 CMPB)는 대개 매 주기마다 해당 shadow 레지스터에서 업데이트됩니다. 사용자는 업데이트가 발생할 시기를 지정합니다. 타임베이스 카운터가 0에 도달하거나 타임베이스 카운터가 주기에 도달 할 때, 새 값을 기반으로하는 작업이 한 주기 지연되거나 이전 값을 기반으로 한 작업이 추가 주기 동안 적용될 수 있는 경우가 있습니다. 일부 PWM 구성은 이러한 상황을 피합니다. 여기에는 다음 사항이 포함되나 이에 국한되지는 않습니다 :

업-다운 카운트 모드를 사용하여 대칭 PWM 생성 : 
- CMPA / CMPB를 0으로 로드하는 경우 1보다 크거나 같은 CMPA / CMPB 값을 사용하세요.
- CMPA / CMPB를 주기로 로드하는 경우 TBPRD-1보다 작거나 같은 CMPA / CMPB 값을 사용하세요.

이것은 PWM주기에서 적어도 하나의 TBCLK주기의 펄스가 항상 존재함을 의미하며, 매우 짧은 경우 시스템에 의해 무시되는 경향이 있습니다

업-다운 카운트 모드를 사용하여 비대칭 PWM 생성 :
- 50 % ~ 0 % 비대칭 PWM을 달성하려면 다음 구성을 사용하세요. 
CMPA / CMPB를 주기에 로드하고 주기 동작을 사용하여 PWM을 지우고 비교 동작을 통해 PWM을 설정합니다. 비교 값을 0에서 TBPRD로 변조하여 50 % ~ 0 % PWM 듀티를 달성합니다. 

업 카운트 모드를 사용하여 비대칭 PWM을 생성 할 때 :
- 0 ~ 100% 비대칭 PWM을 얻으려면 다음 구성을 사용하세요. 
TBPRD에 CMPA / CMPB를 로드하십시오. Zero 동작을 사용하여 PWM을 설정하고 비교 작업을 수행하여 PWM을 지웁니다. 
비교 값을 0에서 TBPRD + 1로 변조하여 0~100 % PWM 듀티를 달성합니다.

0~100% 듀티 사이클 제어 애플리케이션 보고서를 위해 향상된 펄스 폭 모듈레이터 (ePWM) 모듈 사용 (문서 번호 SPRAAI1)

그림 34-20은 TBCTR의 업 / 다운 카운트 모드를 사용하여 대칭 PWM 파형을 생성하는 방법을 보여줍니다. 이 모드에서는 파형의 업 카운트 및 다운 카운트 부분에서 동일한 비교 일치를 사용하여 0 ~100 % DC 변조가 수행됩니다. 예에서 볼 수 있듯, CMPA가 비교를 위해 사용됩니다.  카운터가 증가하면 CMPA 일치는 PWM 출력을 하이로 끌어 올립니다. 마찬가지로 카운터가 감소 할 때 비교 일치는 PWM 신호를 로우로 끌어 올 것입니다.  

CMPA = 0 일 때, PWM 로우 신호는 전체주기 동안 0 % 듀티 파형을 제공합니다. (?)
CMPA = TBPRD 일 때, PWM 하이 신호는 100 % 듀티를 달성합니다. (?)
( When CMPA = 0, the PWM signal is low for the entire period giving the 0% duty waveform. When CMPA = TBPRD, the PWM signal is high achieving 100% duty. ) 

실제로 이 구성을 사용할 때 CMPA / CMPB를 0으로 로드하면 1보다 크거나 같은 CMPA / CMPB 값을 사용하세요.
CMPA / CMPB를 주기에 로드하는 경우 TBPRD-1보다 작거나 같은 CMPA / CMPB 값을 사용하세요.

Figure 34-20. Up-Down-Count Mode Symmetrical Waveform 업-다운 카운트 모드 대칭 파형

그림 34-21에서 그림 34-26의 PWM 파형은 일반적인 action-qualifier 구성을 보여줍니다. 예제 34-1에서 예제 34-6의 C 코드 샘플은 각 경우에 대해 ePWM 모듈을 구성하는 방법을 보여줍니다. 

그림 및 예제에 사용 된 일부 규칙은 다음과 같습니다.
- TBPRD, CMPA 및 CMPB는 각각의 레지스터에 기록 된 값을 참조합니다. shadow 레지스터가 아닌 active 레지스터는 하드웨어에서 사용됩니다.
- CMPx는 CMPA 또는 CMPB를 나타냅니다.
- EPWMxA 및 EPWMxB는 ePWMx의 출력 신호를 나타냅니다
- 업 - 다운은 카운트 업 및 다운 모드를 의미하고, 업은 업 카운트 모드를 의미하고 다운은 다운 카운트 모드를 의미합니다
- Sym = Symmetric, Asym = Asymmetric

예제 34-1은 그림 34-21의 파형에 대한 초기화 및 런타임을 보여주는 코드 샘플입니다.

Figure 34-21. Up, Single Edge Asymmetric Waveform, With Independent Modulation on EPWMxA and EPWMxB—Active High 
업, 단일 에지 비대칭 파형, EPWMxA 및 EPWMxB에서 독립적인 변조 - 액티브 하이

A. PWM 주기 = (TBPRD + 1 ) × TTBCLK
B. EPWMxA에 대한 듀티 변조는 CMPA에 의해 설정되고 active 하이 (즉, CMPA에 비례하여 높은 듀티 비)이다.
C. EPWMxB에 대한 듀티 변조는 CMPB에 의해 설정되고 active 하이 (즉, CMPB에 비례하는 높은 듀티 비)이다.
D. 완료를 위해 "아무 것도하지 않음" 동작 (X)이 표시되지만 후속 다이어그램에는 표시되지 않습니다.
E. 0과 주기의 작업은 동시에 발생하는 것처럼 보이지만 실제로는 하나의 TBCLK 주기로 구분됩니다. 
    TBCTR은 주기를 0000으로 바꿉니다.

Example 34-1. Code Sample for Figure 34-21


Figure 34-22. Up, Single Edge Asymmetric Waveform With Independent Modulation on EPWMxA and EPWMxB—Active Low 
EPWMxA 및 EPWMxB에서 개별 변조를 사용하는 단일, 엣지 비대칭 파형 - 액티브 로우

A. PWM 주기 = (TBPRD + 1 ) × TTBCLK
B. EPWMxA에 대한 듀티 변조는 CMPA에 의해 설정되고 active 로우이다 (즉, 로우 타임 듀티는 CMPA에 비례 함).
C. EPWMxB에 대한 듀티 변조는 CMPB에 의해 설정되고 active 로우이다 (즉, 로우 타임 듀티는 CMPB에 비례 함).
D. 0과 주기의 작업은 동시에 발생하는 것처럼 보이지만 실제로는 하나의 TBCLK 주기로 구분됩니다. 
    TBCTR은 주기를 0000으로 바꿉니다.

예제 34-2는 그림 34-22의 파형에 대한 초기화 및 런타임을 보여주는 코드 샘플입니다.

Example 34-2. Code Sample for Figure 34-22


Figure 34-23. Up-Count, Pulse Placement Asymmetric Waveform With Independent Modulation on EPWMxA
업 카운트, 펄스 배치 EPWMxA에서 독립적인 변조를 갖는 비대칭 파형

A. PWM 주파수 = 1/( (TBPRD + 1 ) × TTBCLK )
B. 펄스는 어디서든 PWM 사이클 안에 위치한다. (0000 - TBPRD)
C. CMPB - CMPA 에 비례하는 높은 시간 듀티
D. EPWMxB는 주파수 = 1/2 × ((TBPRD + 1) × TBCLK)로 50 % 듀티 사각파를 생성하는 데 사용할 수 있습니다.

예제 34-3은 그림 34-23 파형의 초기화 및 런타임을 보여주는 코드 샘플을 포함합니다. 

Example 34-3. Code Sample for Figure 34-23


Figure 34-24. Up-Down-Count, Dual Edge Symmetric Waveform, With Independent Modulation on EPWMxA and EPWMxB — Active Low 
업 - 다운 카운트, 듀얼 에지 대칭 파형, EPWMxA 및 EPWMxB에서 독립적인 변조 - 액티브 로우

A. PWM 주기 = 2 x TBPRD × TTBCLK
B. EPWMxA에 대한 듀티 변조는 CMPA에 의해 설정되고 액티브 로우이다 (즉, 로우 타임 듀티는 CMPA에 비례 함).
C. EPWMxB에 대한 듀티 변조는 CMPB에 의해 설정되고 액티브 로우이다 (즉, 로우 타임 듀티는 CMPB에 비례 함).
D. 출력 EPWMxA 및 EPWMxB는 독립적인 전원 스위치를 구동 할 수 있습니다.

예제 34-4는 그림 34-24의 파형에 대한 초기화 및 런타임을 보여주는 코드 샘플입니다.

Example 34-4. Code Sample for Figure 34-24



Figure 34-25. Up-Down-Count, Dual Edge Symmetric Waveform, With Independent Modulation on EPWMxA and EPWMxB — Complementary
업 - 다운 카운트, 듀얼 에지 대칭 파형, EPWMxA 및 EPWMxB에서 독립적인 변조 - 보완형

A. PWM 주기 = 2 × TBPRD × TTBCLK
B. EPWMxA에 대한 듀티 변조는 CMPA에 의해 설정되고, 액티브 로우이다.
(낮은 시간 듀티는 CMPA에 비례한다.)
C. EPWMxB에 대한 듀티 변조는 CMPB에 의해 설정되고, 액티브 하이이다. 
(높은 시간 듀티는 CMPB에 비례한다.)
D. 출력 EPWMx는 상 / 하 (보완) 전원 스위치를 구동 할 수 있습니다

E. 데드 밴드 = CMPB - CMPA (소프트웨어로 완전히 프로그램 가능한 에지 배치). 
   보다 고전적인 에지 지연 방법이 필요한 경우 데드 밴드 모듈도 사용할 수 있습니다.

예제 34-5는 그림 34-25의 파형에 대한 초기화 및 런타임을 보여주는 코드 샘플을 포함합니다.

Example 34-5. Code Sample for Figure 34-25


Figure 34-26. Up-Down-Count, Dual Edge Asymmetric Waveform, With Independent Modulation on EPWMxA—Active Low
업 - 다운 카운트, 듀얼 에지 비대칭 파형, EPWMxA에서 독립 변조 -액티브 로우

A. PWM 주기 = 2 × TBPRD × TBCLK
B. 상승 에지와 하강 에지는 PWM 사이클 내에서 비대칭 적으로 배치 될 수 있습니다. 이것은 펄스 배치 기술을 허용합니다.
C. EPWMxA의 Duty 변조는 CMPA와 CMPB에 의해 설정됩니다.
D. EPWMxA의 낮은 시간 듀티는 (CMPA + CMPB)에 비례합니다.
E. 이 예를 액티브 하이로 변경하려면, CMPA 및 CMPB 동작이 반전 될 필요가 있습니다. 
(즉, set ! 클리어 및 set 클리어 ).
F. EPWMxB의 듀티 모듈레이션은 50 %로 고정되어 있습니다 (EPWMxB의 예비 동작 리소스 활용)

예제 34-6은 그림 34-26의 파형에 대한 초기화 및 런타임을 보여주는 코드 샘플을 포함합니다.

Example 34-6. Code Sample for Figure 34-26



34.2.5 Dead-Band Generator (DB) Submodule
그림 34-27은 ePWM 모듈 내의 데드 밴드 서브 모듈을 보여줍니다.

Figure 34-27. Dead_Band Submodule

   34.2.5.1 Purpose of the Dead-Band Submodule 데드 밴드 서브 모듈의 목적
"Action-qualifier (AQ) 모듈" 절에서는 ePWM 모듈의 CMPA 및 CMPB 리소스를 모두 사용하여 에지 배치를 완벽하게 제어함으로써 필수 데드 밴드를 생성하는 방법에 대해 설명했습니다. 그러나 보다 고전적인 에지 지연 기반 dead-band 제어가 필요한 경우 여기에 설명된 dead-band 서브 모듈을 사용해야합니다. 

데드 밴드 모듈의 핵심 기능은 다음과 같습니다 : 
- 단일 EPWMxA 입력에서 데드 밴드 관계가 있는 적절한 신호 쌍 생성 (EPWMxA 및 EPWMxB)
- 프로그래밍 신호 쌍 :
   Active high (AH)
   Active low (AL)
   Active high complementary (AHC)
   Active low complementary (ALC)
- 상승 에지에 프로그램 가능한 지연 추가 ( RED )
- 하강 에지에 프로그램 가능한 지연 추가 ( FED ) 
- 신호 경로에서 완전히 우회 할 수 있음 ( 다이어그램에서 점선 참고 )

   34.2.5.2 Controlling and Monitoring the Dead-Band Submodule 데드 밴드 서브 모듈 제어 및 모니터링
데드 밴드 서브 모듈 작동은 다음 레지스터를 통해 제어 및 모니터링됩니다.

Table 34-13. Dead-Band Generator Submodule Registers 데드 밴드 생성기 서브 모듈 레지스터


   34.2.5.3 Operational Highlights for the Dead-Band Submodule 데드 밴드 서브 모듈의 주요 특징
 
다음 섹션에서는 운영상의 주요 내용을 설명합니다.
데드 밴드 하위 모듈에는 그림 34-28과 같이 독립적인 선택 옵션의 두 그룹이 있습니다.

- 입력 소스 선택 : 데드 밴드 모듈에 대한 입력 신호는 action-qualifier의 EPWMxA 및 EPWMxB 출력 신호입니다.
이 섹션에서는 EPWMxA In 및 EPWMxB In이라고합니다. DBCTL [IN_MODE] 제어 비트를 사용하여 하강 에지 또는 상승 에지의 각 지연에 대한 신호 소스를 선택할 수 있습니다.
 - EPWMxA In은 하강 에지 및 상승 에지 지연의 소스입니다. 이것은 기본 모드입니다.
 - EPWMxA In은 하강 에지 지연 소스이며, EPWMxB In은 상승 에지 지연 소스입니다.
 - EPWMxA In은 상승 에지 지연을 위한 소스이며, EPWMxB In은 하강 에지 지연의 소스입니다.
 - EPWMxB In은 하강 에지 및 상승 에지 지연의 소스입니다.

- 하프 사이클 클럭킹 : 데드 밴드 서브 모듈은 1/2 사이클 클로킹을 사용하여 해상도를 두 배로 클럭 할 수 있습니다. (즉, 카운터는 2 × TBCLK로 클록 됩니다. )

- 출력 모드 제어 : 출력 모드는 DBCTL [OUT_MODE] 비트를 통해 구성됩니다. 이 비트들은 하강 에지 지연, 상승 에지 지연, 둘 다 또는 둘 다 입력 신호에 적용되는지 결정합니다.

- 극성 제어 : 극성 컨트롤 (DBCTL [POLSEL])을 사용하면 상승 에지 지연 신호 및 하강 에지 지연 신호를 데드 밴드 서브 모듈에서 전송하기 전에 반전시킬 지 여부를 지정할 수 있습니다.

Figure 34-28. Configuration Options for the Dead-Band Submodule 데드 밴드 서브 모듈의 구성 옵션

모든 조합이 지원되지만 일반적인 사용 모드가 전부는 아닙니다. 
표 34-14에는 몇 가지 클래식 데드 밴드 구성이 나와 있습니다. 
이 모드에서는 DBCTL [IN_MODE]가 EPWMxA In이 하강 에지 및 상승 에지 지연의 소스가 되도록 구성되어 있다고 가정합니다.
입력 신호 소스를 변경하여 향상된 모드 또는 비 전통적인 모드를 얻을 수 있습니다. 표 34-14에 표시된 모드는 다음 범주로 분류됩니다.

모드 1 : 하강 에지 지연 (FED)과 상승 에지 지연 (RED)을 모두 무시합니다.
PWM 신호 경로에서 데드 밴드 서브 모듈을 완전히 비활성화 할 수 있습니다.

모드 2-5 : 기존의 데드 밴드 극성 설정 : 이는 사용 가능한 산업 전원 스위치 게이트 드라이버에 필요한 모든 활성 하이 / 로우 모드를 처리해야하는 전형적인 극성 구성을 나타냅니다. 이러한 일반적인 경우의 파형을 그림 34-29에 나타냅니다. 그림 34-29와 동등한 파형을 생성하려면 EPWMxA와 같이 신호를 생성하도록 동작 한정자 하위 모듈을 구성하십시오.

모드 6 : 바이 패스 상승 에지 지연 및 모드 7 : 바이 패스 하강 에지 지연 :
마지막으로 표 34-14의 마지막 두 항목은 하강 에지 지연 (FED) 또는 상승 에지 지연 (RED) 블록을 우회하는 조합을 보여줍니다.

Table 34-14. Classical Dead-Band Operating Modes 고전적인 데드 밴드 운영 모드


그림 34-29는 0 % < duty <100 % 인 일반적인 경우의 파형을 보여줍니다.

Figure 34-29. Dead-Band Waveforms for Typical Cases (0% < Duty < 100%)

데드 밴드 서브 모듈은 상승 에지 (RED) 및 하강 에지 (FED) 지연에 대해 독립적인 값을 지원합니다. 
지연량은 DBRED 및 DBFED 레지스터를 사용하여 프로그래밍됩니다. 이들은 10 비트 레지스터이며 그 값은 타임베이스 클럭의 수, TBCLK, 신호 에지가 지연된 시간을 나타냅니다. 예를 들어 하강 에지 지연 및 상승 에지 지연을 계산하는 수식은 다음과 같습니다.

FED = DBFED × TTBCLK
RED = DBRED × TTBCLK

여기서 TTBCLK는 VCLK3의 사전버전(prescaled version)인 TBCLK의 주기입니다.
편의상 다양한 TBCLK 옵션에 대한 지연 값이 표 34-15에 나와 있습니다.

표 34-15. Dead-Band Delay Values in μS as a Function of DBFED and DBRED
           DBFED와 DBRED의 함수로서 μS 단위의 데드 밴드 지연 값
-> DBFED, DBRED 설정 값에 따른 시간 지연표 인듯.

하프 사이클 클로킹이 활성화되면 하강 에지 지연 및 상승 에지 지연을 계산하는 공식은 다음과 같이 됩니다.

FED = DBFED × TTBCLK/2
RED = DBRED × TTBCLK/2



34.2.6 PWM-Chopper (PC) submodule

그림 34-30은 ePWM 모듈 내의 PWM-chopper (PC) 하위 모듈(submodule)을 보여줍니다.

PWM-chopper submodule은 high-frequency carrier signal가 action-qualifier 및 dead-band submodule에 의해 생성 된 PWM 파형을 변조 할 수 있게 해줍니다. 전력 스위칭 소자를 제어하기 위해 펄스 트랜스포머 기반 게이트 드라이버(pulse transformer-based gate drivers)가 필요한 경우 이 기능이 중요합니다.

   34.2.6.1 PWM-Chopper Submodule의 목적

PWM-chopper Submodule의 주요 기능은 다음과 같습니다.

- 프로그래밍 가능한 chopping (반송파) 주파수
- 프로그래밍 가능한 첫 번째 펄스의 펄스 폭
- 두 번째 및 후속(subsequent) 펄스의 프로그래밍 가능한 duty cycle
- 필요없는 경우 완전히 bypassed 할 수 있습니다.

   34.2.6.2 PWM-Chopper Submodule 제어
PWM-chopper Submodule 작동은 표 34-16의 레지스터를 통해 제어됩니다.

Table 34-16. PWM-Chopper Submodule Registers


   34.2.6.3 PWM-Chopper Submodule의 주요 특징
그림 34-31은 PWM-chopper Submodule의 작동 세부 사항을 보여줍니다. 캐리어(carrier) 클럭은 VCLK3에서 파생됩니다. 주파수 및 bypassed은 PCCTL 레지스터의 CHPFREQ 및 CHPDUTY 비트를 통해 제어됩니다. one-shot 블록은 하드 및 패스트 스위치가 켜지도록 고 에너지의 첫 번째 펄스를 제공하는 기능이며 후속 펄스는 펄스를 유지하면서 전원 스위치를 켜 놓은 채로 유지합니다. one-shot 폭은 OSHTWTH 비트를 통해 프로그래밍됩니다. PWM-chopper Submodule은 CHPEN 비트를 통해 완전히 *disabled(bypassed) 될 수있다.

*사용 금지의 [disabled]
금지의 인터럽트가 발생하지 못하도록 하는 중앙 처리 장치의 제어 상태.

Figure 34-31. PWM-Chopper Submodule Operational Details PWM-Chopper 서브모듈의 운영 세부


   34.2.6.4 파형(Waveforms)
그림 34-32는 chopping 동작의 단순화 된 파형을 보여줍니다. one-shot 및 duty-cycle 제어는 표시되지 않습니다. 
one-shot 및 duty-cycle 제어에 대한 자세한 내용은 다음 절에서 설명합니다.

Figure 34-32. Simple PWM-Chopper Submodule Waveforms Showing Chopping Action Only
               Chopping 동작만을 보여주는 간단한 PWM-Chopper 서브 모듈 파형


     34.2.6.4.1 one-shot 펄스
첫 번째 펄스의 폭은 16 가지 가능한 펄스 폭 값 중 하나로 프로그래밍 할 수 있습니다. 첫 번째 펄스의 폭 또는 주기는 다음과 같습니다.

T1stpulse = TVCLK3 × 8 × OSHTWTH

여기서 TVCLK3은 시스템 클록 (VCLK3)의주기이고 OSHTWTH는 4 개의 제어 비트 (1에서 16 사이의 값)이며, 
그림 34-33은 첫 번째 및 후속 유지 펄스를 보여 주며 표 34-17은 VCLK3= 100MHz에 대한 가능한 펄스 폭 값을 제공합니다.

Figure 34-33. PWM-Chopper Submodule Waveforms Showing the First Pulse and Subsequent Sustaining
Pulses 첫 번째 펄스와 후속 유지 펄스를 보여주는 PWM 초퍼 서브 모듈 파형

Table 34-17. Possible Pulse Width Values for VCLK3 = 100 MHz 
VCLK3 = 100 MHz에 대한 가능한 펄스 폭 값

     34.2.6.4.2 duty-cycle 제어
펄스 트랜스포머 기반 게이트 드라이브 설계는 트랜스포머 및 관련 회로의 자기 특성 또는 특성을 이해할 필요가 있습니다. 
Saturation(포화도)는 그러한 고려사항 중 하나입니다. 
게이트 드라이브 설계자를 보조하기 위해 두 번째 및 후속 펄스의 duty-cycle이 프로그래밍 가능해졌습니다. 이러한 지속 펄스는 주기 동안 전원 스위치 게이트에서 정확한 구동 강도와 극성을 유지하므로 프로그램 가능한 duty-cycle을 통해 소프트웨어 제어를 통해 설계를 조정하거나 최적화 할 수 있습니다.

그림 34-34는 CHPDUTY 비트를 프로그래밍함으로써 가능한 duty-cycle제어를 보여줍니다. 7 가지 가능한 duty ratios 중 하나를 12.5 %에서 87.5 %까지 선택할 수 있습니다.

Figure 34-34. PWM-Chopper Submodule Waveforms Showing the Pulse Width (Duty Cycle) Control of Sustaining Pulses 지속 펄스의 펄스 폭 (듀티 사이클) 제어를 보여주는 PWM-Chopper 서브 모듈 파형


34.2.7 Trip-Zone (TZ) Submodule

그림 34-35는 트립 영역 (TZ) Submodule이 ePWM 모듈에 어떻게 끼워지는지 보여줍니다. 각 ePWM 모듈은 6 개의 TZn 신호 (TZ1에서 TZ6)에 연결됩니다. TZ1에서 TZ3까지는 GPIO mux에서 제공됩니다. TZ4는 EQEP1ERR 및 EQEP2ERR 신호의 조합으로 제공됩니다. 
TZ5는 시스템 oscillator 또는 PLL 클럭 오류 로직에 연결되며, TZ6은 CPU의 디버그 모드 중지 표시 출력을 기반으로합니다. 이 신호는 오류 또는 트립 조건을 나타내며, 오류가 발생할 때 ePWM 출력을 적절하게 응답하도록 프로그래밍 할 수있습니다.


Figure 34-35. Trip-Zone Submodule

   34.2.7.1 Trip-Zone Submodule 목적
Trip-Zone Submodule의 주요 기능은 다음과 같습니다 : 
- 트립 입력 TZ1에서 TZ6은 모든 ePWM 모듈에 mapped 됩니다.
- 오류 발생시 아무런 조치도 취하지 않으면 ePWM 출력 EPWMxA 및 EPWMxB는 다음 중 하나를 강제 수행 할 수 있습니다.
  - High
  - Low
  - High-impedance
- 단락 회로 (short circuits) 또는 과전류 조건(over-current)에서 one-shot trip (OSHT)을 지원합니다.
- 전류 제한 동작을위한 CBC (cycle-by-cycle trip) 지원.
-  on-chip 아날로그 비교기 모듈 출력 및 / 또는 TZ1-TZ3 신호 상태에 기반한 디지털 비교 트립핑 (DC) 지원.
- 각 트립 영역 입력 및 digital compare (DC) submodule DCAEVT1 / 2 또는 DCBEVT1 / 2 force 이벤트는 
   one-shot 또는 cycle-by-cycle 작동에 할당 할 수 있습니다.
- 인터럽트 생성은 모든 trip-zone 입력에서 가능합니다.
- 소프트웨어 강제 *tripping도 지원됩니다.
- trip-zone submodule 이 필요하지 않은 경우 완전히 bypass할 수 있습니다.

*트리핑 [tripping]
수동 또는 전자(電磁) 코일의 전류의 변화에 따라 개폐기의 억제 기구를 풀어 축적된 에너지를 방출하여 
개폐장치 등을 조작하는 것을 트리핑이라 한다


   34.2.7.2 Controlling and Monitoring the Trip-Zone Submodule Trip-Zone 서브 모듈 제어 및 모니터링
트립 존 서브 모듈 작동은 다음 레지스터를 통해 제어 및 모니터링됩니다 :

Table 34-18. Trip-Zone Submodule Registers

Register   Name Address  Offset Shadowed Description (1)
----------------------------------------------------------------------------------------------------------
TZDCSEL   26h  No   Trip-zone Digital Compare Select Register (2)
TZSEL   24h  No   Trip-Zone Select Register
TZEINT   2Ah  No   Trip-Zone Enable Interrupt Register
TZCTL   28h  No   Trip-Zone Control Register
TZCLR   2Eh  No   Trip-Zone Clear Register
TZFLG   2Ch  No   Trip-Zone Flag Register
TZFRC   30h  No   Trip-Zone Force Register

(1) 모든 trip-zone레지스터는 권한(privileged) 모드에서만 쓸 수 있습니다.
(2) 이 레지스터는 34.2.9 절에서 더 자세히 논의됩니다.


   34.2.7.3 Trip-Zone Submodule의 주요 사항(operational highlights)

다음 절에서는 trip-zone submodule의 주요 사항 및 환경설정 옵션에 대해 설명합니다.

trip-zone신호 TZ1 내지 TZ6 (총체적으로 TZn이라고도 함)은 액티브 로우(active low) 입력 신호입니다. 
이 신호 중 하나가 낮아 지거나 TZDCSEL 레지스터 이벤트 선택에 따라 DCAEVT1 / 2 또는 DCBEVT1 / 2 강제 설정이 발생하면trip event가 발생했음을 나타냅니다. 각 ePWM 모듈은 각각의 trip-zone 신호 또는 DC 이벤트를 무시하거나 사용하도록 개별적으로 configured 할 수 있습니다. 특정 ePWM 모듈이 사용하는 trip-zone 신호 또는 DC 이벤트는 특정 ePWM 모듈의 TZSEL 레지스터에 의해 결정됩니다. 
trip-zone 신호는 시스템 클럭 (VCLK3)에 동기화되거나 동기화되지 않을 수 있으며 GPIO MUX 블록 내에서 디지털 필터링됩니다. 
TZn 입력에서 최소 3 × TBCLK의 low pulse 폭은 ePWM 모듈의 오류 조건을 trigger하기에 충분합니다. 
펄스 폭이 이보다 작으면 트립 조건이 래치(latched)되지 않을 수 있습니다. 비동기 트립(asynchronous trip)은 어떤 이유로든 클록이 누락되면 TZn 입력에 유효한 이벤트가 발생해도 출력이 여전히 tripped 될 수 있음을 확인합니다. GPIO 또는 주변 장치를 적절하게 구성해야합니다. 자세한 내용은 장치 기술 참조 설명서의 IOMM 장을 참조하십시오.

각 TZn 입력은 ePWM 모듈에 대해 cycle-by-cycle 또는 one-shot trip 이벤트를 제공하도록 개별적으로 구성 될 수 있습니다. 
DCAEVT1 및 DCBEVT1 이벤트는 ePWM 모듈을 직접 trip하거나 모듈에 one-shot trip 이벤트를 제공하도록 구성 할 수 있습니다. 
마찬가지로 DCAVET2 및 DCBEVT2 이벤트를 구성하여 ePWM 모듈을 직접 trip하거나 cycle-by-cycle trip 이벤트를 모듈에 제공 할 수도 있습니다. 이 구성은 TZSEL [DCAEVT1 / 2], TZSEL [DCBEVT1 / 2], TZSEL [CBCn] 및 TZSEL [OSHTn] 제어 비트 (n은 트립 입력에 해당)에 의해 결정됩니다.

- Cycle-by-Cycle (CBC):
cycle-by-cycle trip이 발생하면 TZCTL [TZA] 및 TZCTL [TZB] 비트에 지정된 동작이 EPWMxA 및 / 또는 EPWMxB 출력에서 즉시 수행됩니다. 표 34-19는 가능한 조치를 나열합니다. 또한 cycle-by-cycle trip event flag (TZFLG [CBC])가 설정되고 TZEINT 레지스터 및 VIM 주변 장치에서 활성화 된 경우 EPWMx_TZINT 인터럽트가 생성됩니다.

(해석이 확실하지 않아요ㅠㅠ)
CBC 인터럽트가 TZEINT 레지스터를 통해 활성화되고 DCAEVT2 또는 DCBEVT2가 TZSEL 레지스터를 통해 CBC trip 소스로 선택되면 DC events trigger 가 CBC mechanism을 통해 인터럽트하므로 TZEINT 레지스터에서 DCAEVT2 또는 DCBEVT2 인터럽트도 활성화 할 필요가 없습니다.
( If the CBC interrupt is enabled via the TZEINT register, and DCAEVT2 or DCBEVT2 are selected as
CBC trip sources via the TZSEL register, it is not necessary to also enable the DCAEVT2 or DCBEVT2
interrupts in the TZEINT register, as the DC events trigger interrupts through the CBC mechanism. )

* 정리하자면 … 
CBC 인터럽트가 TZEINT를 통해 활성화 -> DCAEVT2 또는 DCBEVT2가 TZSEL를 통해 CBC trip 소스로 선택 -> DC events trigger가 CBC mechanism을 통해 인터럽트함 -> TZEINT 레지스터에서 DCAEVT2 또는 DCBEVT2 인터럽트도 활성화 할 필요없음

ePWM time-base 카운터가 0 (TBCTR = 0x0000)에 도달하여 trip event가 더 이상 발생하지 않으면 입력에 지정된 조건이 자동으로 지워집니다. 따라서 이 모드에서는 trip event가 PWM cycle마다 지워지거나 재설정됩니다. 
TZFLG [CBC] flag bit는 TZCLR [CBC] 비트에 기록함으로써 수동으로 클리어 될 때까지 설정된 상태를 유지합니다.  TZFLG [CBC] 비트가 지워졌을 때 cycle-by-cycle trip event가 여전히 존재하면, 즉시 다시 설정됩니다.

- One-Shot (OSHT):
one-shot trip 이벤트가 발생하면 TZCTL [TZA] 및 TZCTL [TZB] 비트에 지정된 동작이 EPWMxA 및 / 또는 EPWMxB 출력에서 즉시 수행됩니다. 표 34-19는 가능한 조치를 나열합니다. 또한 one-shot trip event flag(TZFLG [OST])가 설정되고 TZEINT 레지스터 및 VIM 주변 장치에서 활성화 된 경우 EPWMx_TZINT 인터럽트가 생성됩니다.  one-shot trip 조건(condition)은 TZCLR [OST] 비트에 기록함으로써 수동으로 클리어할 수 있다.

원샷 인터럽트가 TZEINT 레지스터를 통해 활성화되고, DCAEVT1 또는 DCBEVT1이 TZSEL 레지스터를 통해 OSHT 트립 소스로 선택되면, DC 이벤트가 OSHT mechanism을 통해 인터럽트를 trigger하므로 TZEINT 레지스터에서 DCAEVT1 또는 DCBEVT1 인터럽트를 활성화 할 필요가 없습니다.

- Digital Compare Events (DCAEVT1/2 and DCBEVT1/2):
digital compare DCAEVT1 / 2 또는 DCBEVT1 / 2 이벤트는 TZDCSEL 레지스터에 의해 선택된 DCAH / DCAL 및 DCBH / DCBL 신호의 조합을 기반으로 생성됩니다. 
DCAH / DCAL 및 DCBH / DCBL 신호의 소스 신호는 DCTRIPSEL 레지스터를 통해 선택되며 trip zone 입력 핀이 될 수 있습니다. 
digital compare(디지털 비교) submodule신호에 대한 자세한 내용은 34.2.9 절을 참조하십시오.

digital compare event가 발생하면 TZCTL [DCAEVT1 / 2] 및 TZCTL [DCBEVT1 / 2] 비트에 지정된 동작이 EPWMxA 및 / 또는 EPWMxB 출력에서 즉시 수행됩니다. 
표 34-19는 가능한 조치를 나열합니다. 또한 관련 DC trip event flag (TZFLG [DCAEVT1 / 2] / TZFLG [DCBEVT1 / 2])가 설정되고 TZEINT 레지스터 및 VIM 주변 장치에서 활성화 된 경우 EPWMx_TZINT 인터럽트가 생성됩니다.

DC trip event가 더 이상 존재하지 않으면 핀의 지정된 조건이 자동으로 제거됩니다. TZFLG [DCAEVT1 / 2] 또는 TZFLG [DCBEVT1 / 2] 플래그 비트는 TZCLR [DCAEVT1 / 2] 또는 TZCLR [DCBEVT1 / 2] 비트에 기록하여 수동으로 클리어 될 때까지 설정된 상태로 유지됩니다.  -> 반복되는 내용이넹.. 
TZFLG [DCAEVT1 / 2] 또는 TZFLG [DCBEVT1 / 2] 플래그가 지워졌을 때 DC 트립이 계속 발생하면 즉시 다시 설정됩니다.

trip event가 발생할 때 수행되는 동작은 TZCTL 레지스터 비트 필드를 통해 각 ePWM 출력 핀에 개별적으로 구성 될 수 있습니다. 
표 34-19에 표시된 네 가지 가능한 작업 중 하나가 trip event에서 수행 될 수 있습니다.

Table 34-19. Possible Actions On a Trip Event  Trip 이벤트의 발생할 수 있는 액션들

Example 34-7. Trip-Zone Configurations  Trip-Zone 구성
Scenario A:
TZ1의 원샷 트립 이벤트는 EPWM1A, EPWM1B를 모두 낮추고 EPWM2A 및 EPWM2B를 높게 설정합니다.

다음과 같이 ePWM1 레지스터를 구성하십시오 : 
- TZSEL [OSHT1] = 1 : TZ1을 ePWM1의 원샷 이벤트 소스로 사용 가능하게 합니다.
- TZCTL [TZA] = 2 : 트립 이벤트에서 EPWM1A가 강제로 낮아집니다.
- TZCTL [TZB] = 2 : 트립 이벤트에서 EPWM1B가 강제로 낮아집니다.

다음과 같이 ePWM2 레지스터를 구성하십시오 :
- TZSEL [OSHT1] = 1 : TZ1을 ePWM2의 원샷 이벤트 소스로 사용 가능하게합니다.
- TZCTL [TZA] = 1 : 트립 이벤트에서 EPWM2A가 강제로 높게 설정됩니다.
- TZCTL [TZB] = 1 : 트립 이벤트에서 EPWM2B가 강제로 놓게 설정됩니다.

Scenario B:
TZ5의 cycle-by-cycle 이벤트는 EPWM1A, EPWM1B를 모두 낮춥니다.
TZ1 또는 TZ6의 원샷 이벤트는 EPWM2A를 높은 임피던스 상태로 만듭니다.

다음과 같이 ePWM1 레지스터를 구성하십시오 :
- TZSEL [CBC5] = 1 : ePWM1의 원샷 이벤트 소스로 TZ5를 활성화합니다.
- TZCTL [TZA] = 2 : 트립 이벤트에서 EPWM1A가 강제로 낮아집니다.
- TZCTL [TZB] = 2 : 트립 이벤트에서 EPWM1B가 강제로 낮아집니다.

다음과 같이 ePWM2 레지스터를 구성하십시오 : 
- TZSEL [OSHT1] = 1 : TZ1을 ePWM2의 원샷 이벤트 소스로 사용 가능하게합니다.
- TZSEL [OSHT6] = 1 : TZ6을 ePWM2의 원샷 이벤트 소스로 사용할 수 있습니다.
- TZCTL [TZA] = 0 : EPWM2A는 트립 이벤트에서 하이 임피던스 상태가됩니다.
- TZCTL [TZB] = 3 : EPWM 2B는 트립 이벤트를 무시합니다.

   34.2.7.4 Generating Trip Event Interrupts  Trip 이벤트 인터럽트 생성
그림 34-36과 그림 34-37은 트립 영역 서브 모듈 제어와 인터럽트 로직을 각각 나타냅니다. DCAEVT1 / 2 및 DCBEVT1 / 2 신호에 대해서는 34.2.9 절에서 자세히 설명합니다.

Figure 34-36. Trip-Zone Submodule Mode Control Logic  Trip-Zone 서브모듈 제어 로직
Figure 34-37. Trip-Zone Submodule Interrupt Logic  Trip-Zone 서브모듈 인터럽트 로직


34.2.8 Event-Trigger (ET) Submodule

이벤트-트리거 하위 모듈의 주요 기능은 다음과 같습니다 : 
- 타임베이스, 카운터 비교 및 디지털 비교 서브 모듈로 생성 된 이벤트 입력을 수신합니다.
- 상향 / 하향 이벤트 자격에 대한 타임 베이스 방향 정보를 사용합니다.
- 프리 스케일링 로직을 사용하여 다음 위치에서 인터럽트 요청 및 ADC 변환 시작을 발행(issue)합니다 : 
  - 모든 이벤트
  - 모든 두번째 이벤트
  - 모든 서번째 이벤트
- 이벤트 카운터 및 플래그를 통해 이벤트 생성을 완전히 볼 수 있습니다.
- 인터럽트 및 ADC의 변환 시작 소프트웨어 강제 허용

이벤트 트리거 서브 모듈은 타임 베이스 서브 모듈, 카운터 비교 서브모듈 (counter-compare submodule) 및 디지털 비교 서브 모듈 (digital-compare submodule)에 의해 생성 된 이벤트를 관리하여 CPU로 인터럽트를 생성하거나 선택된 이벤트가 발생할 때 ADC 로의 변환 펄스를 시작합니다. 그림 34-38은 이벤트 트리거 서브 모듈이 ePWM 시스템에 맞는 위치를 보여줍니다.



Figure 34-38. Event-Trigger Submodule 이벤트-트리거 서브모듈

   34.2.8.1 Operational Overview of the Event-Trigger Submodule 이벤트 트리거 하위 모듈의 작동 개요
다음 섹션에서는 이벤트 트리거 하위 모듈의 주요 기능에 대해 설명합니다.

각 ePWM 모듈에는 VIM에 연결된 하나의 인터럽트 요청 라인과 ADC 모듈에 연결된 두 개의 변환 시작 신호가 있습니다. 그림 34-39에서 보듯이 ePWMxSOCA 및 ePWMxSOCB 신호가 결합되어 ADC 시작 변환을 트리거하는 데 사용할 수있는 4 개의 특수 신호가 생성되므로 여러 모듈이 ADC 트리거 입력을 통해 ADC 시작 변환을 시작할 수 있습니다. 

Figure 34-39. Event-Trigger Submodule Inter-Connectivity of ADC Start of Conversion
               Event-Trigger 서브모듈 ADC변환 시작의 상호연결 (?)

이벤트 트리거 서브모듈은 다양한 이벤트 조건 (그림 34-40에 나와있는 이벤트 트리거 서브 모듈의 왼쪽 입력)을 모니터링하고 인터럽트 요청이나 ADC 변환시작 전에 이러한 이벤트를 사전 조정하도록 구성 할 수 있습니다. 이벤트 트리거 프리 스케일링 로직은 인터럽트 요청과 ADC 변환 시작을 다음에서 발생시킬 수 있습니다. 
- 모든 이벤트
- 모든 두번째 이벤트
- 모든 세번째 이벤트

Figure 34-40. Event-Trigger Submodule Showing Event Inputs and Prescaled Outputs
               이벤트 입력 및 Prescaled 출력을 보여주는 이벤트 트리거 서브 모듈

이벤트 트리거 서브 모듈을 구성하는 데 사용되는 키 레지스터는 표 34-20에 나열되어 있습니다.

Table 34-20. Event-Trigger Submodule Registers 
- ETSEL : 가능한 이벤트 중에서 인터럽트를 트리거하거나 ADC 변환을 시작할 이벤트를 선택합니다.
- ETPS : 위에서 언급한 이벤트 Prescaled 옵션을 프로그래밍합니다.
- ETFLG : 이들은 선택된 Prescaled 이벤트의 상태를 나타내는 플래그 비트입니다.
- ETCLR : 이 비트를 사용하면 소프트웨어를 통해 ETFLG 레지스터의 플래그 비트를 지울 수 있습니다.
- ETFRC : 이 비트는 소프트웨어 강제 이벤트를 허용합니다. 디버깅 또는 소프트웨어 개입에 유용합니다.

그림 34-41, 그림 34-42 및 그림 34-43에는 다양한 레지스터 비트가 인터럽트 및 ADC 시작 변환 논리와 상호 작용하는 방식에 대한 자세한 내용이 나와 있습니다.

그림 34-41은 이벤트 트리거의 인터럽트 생성 로직을 보여줍니다. 인터럽트주기 (ETPS [INTPRD]) 비트는 인터럽트 펄스를 생성하는 데 필요한 이벤트 수를 지정합니다. 사용할 수 있는 선택 사항은 다음과 같습니다.

- 인터럽트를 생성하지 마세요.
- 모든 이벤트에 인터럽트 생성
- 모든 두번째 이벤트에 인터럽트 생성
- 모든 세번째 이벤트에 인터럽트 생성

인터럽트를 유발할 수 있는 이벤트는 인터럽트 선택 (ETSEL [INTSEL]) 비트로 구성됩니다. 이벤트는 다음 중 하나 일 수 있습니다.

- 0과 동일한 시간축 카운터 (TBCTR = 0x0000).
- 주기와 동일한 시간축 카운터 (TBCTR = TBPRD).
- 0 또는 주기와 동일한 시간축 카운터 (TBCTR = 0x0000 || TBCTR = TBPRD)
- 타이머가 증가 할 때 비교 A 레지스터 (CMPA)와 동일한 시간 기준 카운터.
- 타이머가 감소 할 때 비교 A 레지스터 (CMPA)와 동일한 시간 기준 카운터.
- 타이머가 증가 할 때 비교 B 레지스터 (CMPB)와 동일한 시간 기준 카운터.
- 타이머가 감소 할 때 비교 B 레지스터 (CMPB)와 동일한 시간 기준 카운터.

발생한 이벤트 수는 인터럽트 이벤트 카운터 (ETPS [INTCNT]) 레지스터 비트에서 읽을 수 있습니다. 즉, 지정된 이벤트가 발생하면 ETPS [INTCNT] 비트는 ETPS [INTPRD]에 지정된 값에 도달 할 때까지 증가합니다. ETPS [INTCNT] = ETPS [INTPRD] 일 때 카운터는 카운트를 멈추고 출력이 설정됩니다. 카운터는 인터럽트가 VIM으로 전송 될 때만 지워집니다.

ETPS [INTCNT]가 ETPS [INTPRD]에 도달하면 다음과 같은 행동이 발생합니다 :

- 인터럽트가 사용가능하고 ETSEL [INTEN] = 1이고 인터럽트 플래그가 클리어된 경우 ETFLG [INT] = 0 이면 인터럽트 펄스가 생성되고, 인터럽트 플래그가 설정되고 ETFLG [INT] = 1이 되며 이벤트 카운터는 ETPS [INTCNT] = 0 으로 클리어됩니다. 카운터가 이벤트를 다시 카운트하기 시작합니다.
 -> 인터럽트 펄스를 생성하기 위한 조건과 생성 후의 처리

- 인터럽트가 비활성화되거나 ETSEL [INTEN] = 0이거나 인터럽트 플래그가 설정된 경우 ETFLG [INT] = 1이면 카운터는 주기 값 ETPS [INTCNT] = ETPS [INTPRD]에 도달하면 이벤트 계산을 중지합니다.
- 인터럽트가 활성화되어 있지만 인터럽트 플래그가 이미 설정된 경우 카운터는 ENTFLG [INT] 플래그가 해제 될 때까지 출력을 계속 유지합니다. 하나의 인터럽트가 보류 중이고 하나는 인터럽트 될 수 있습니다.

INTPRD 비트에 기록하면 카운터가 자동으로 클리어되고 (INTCNT = 0) 카운터 출력이 리셋됩니다 (따라서 인터럽트가 생성되지 않습니다). -> ETPS[INTPRD] , ETPS[INTCNT] 
 ETFRC [INT] 비트에 1을 쓰면 이벤트 카운터 INTCNT가 증가합니다. 카운터는 INTCNT = INTPRD 인 경우 위에서 설명한대로 동작합니다.  INTPRD = 0 일 때, 카운터는 비활성화되므로 이벤트가 감지되지 않고 ETFRC [INT] 비트도 무시됩니다.

위의 정의는 모든 이벤트, 모든 두 번째 이벤트 또는 모든 세번째 이벤트에서 인터럽트를 생성 할 수 있음을 의미합니다.  네 번째 또는 그 이상의 이벤트마다 인터럽트를 생성 할 수 없습니다

Figure 34-41. Event-Trigger Interrupt Generator  이벤트-트리거 인터럽트 생성 

그림 34-42는 이벤트 트리거의 SOCA (Start-of-Conversion-A) 펄스 발생기의 작동을 보여줍니다. ETPS [SOCACNT] 카운터 및 ETPS [SOCAPRD] 주기 값은 펄스가 연속적으로 생성된다는 것을 제외하고는 인터럽트 생성기와 유사하게 동작합니다. 즉, 펄스 플래그 ETFLG [SOCA]는 펄스가 생성 될 때 래치(latched)되지만 더 이상의 펄스 생성을 중지하지는 않습니다. 활성/비활성 비트 ETSEL [SOCAEN]은 펄스 생성을 중지하지만, 인터럽트 생성 로직과 마찬가지로 주기 값에 도달 할 때까지 입력 이벤트를 계속 계산할 수 있습니다. SOCA 및 SOCB 펄스를 트리거하는 이벤트는 ETSEL [SOCASEL] 및 ETSEL [SOCBSEL] 비트에서 개별적으로 구성 할 수 있습니다. 가능한 이벤트는 digital-compare(DC) 서브 모듈에서 DCAEVT1.soc 및 DCBEVT1.soc 이벤트 신호를 추가하여 인터럽트 생성 로직에 대해 지정할 수 있는 동일한 이벤트입니다.

Figure 34-42. Event-Trigger SOCA Pulse Generator  Event-Trigger SOCA 펄스 발생기
A. DCAEVT1.soc 신호는 Digital-compare(DC) 서브 모듈에 의해 생성된 신호입니다 (34.2.9 절 참조).

그림 34-43은 이벤트 트리거의 변환시작 B (start-of-conversion-B : SOCB) 펄스 발생기의 작동을 보여줍니다. 이벤트 트리거의 SOCB 펄스 발생기는 SOCA와 같은 방식으로 작동합니다.

Figure 34-43. Event-Trigger SOCB Pulse Generator  이벤트-트리거 SOCB 펄스 발생기
A. DCBEVT1.soc 신호는 Digital-compare(DC) 서브 모듈에 의해 생성된 신호입니다 (34.2.9 절 참조).



34.2.9 Digital Compare (DC) Submodule 
그림 34-44는 디지털 비교 (Digital Compare : DC) 서브 모듈 신호가 ePWM 시스템의 다른 서브 모듈과 인터페이스하는 위치를 보여줍니다.

디지털 비교 (DC) 서브 모듈은 ePWM 모듈 외부의 신호를 비교하여 PWM 이벤트 / 동작을 직접 생성 한 다음 이벤트 트리거, 트립 영역 및 타임베이스 서브 모듈에 공급합니다. 또한 DC 이벤트 신호의 노이즈 또는 원치 않는 펄스를 필터링하기 위해 블링킹(blanking) 윈도우 기능이 지원됩니다.

Figure 34-44. Digital-Compare Submodule High-Level Block Diagram 디지털 비교 서브 모듈 상위 블록 다이어그램

   34.2.9.1 Purpose of the Digital Compare Submodule 디지털 비교 서브모듈의 목적
디지털 비교 하위 모듈의 주요 기능은 다음과 같습니다 :
TZ1, TZ2 및 TZ3 입력은 디지털 비교 A 고/저 (DCAH, DCAL) 및 디지털 B 고/저 (DCBH, DCBL) 비교 신호를 생성합니다.

DCAH/L 및 DCBH/L 신호는 이벤트를 트리거하거나 필터링되거나 트립 존, 이벤트 트리거 및 타임베이스 서브 모듈에 직접 공급되어 다음과 같은 작업을 수행 할 수 있습니다 : 

- 트립 영역 인터럽트 생성 
- ADC 변환시작을 생성한다.
- force an event 
- ePWM 모듈 TBCTR을 동기화 하기위한 동기화 이벤트를 생성합니다.
- 이벤트 필터링 (블링킹 윈도우 로직)은 선택적으로 잡음을 제거하기 위해 입력 신호를 비울 수 있습니다.

   34.2.9.2 Controlling and Monitoring the Digital Compare Submodule 디지털 비교 서브모듈 제어 및 모니터링
디지털 비교 하위 모듈 작동은 다음 레지스터를 통해 제어 및 모니터링됩니다.

Table 34-21. Digital Compare Submodule Registers 디지털 비교 서브모듈 레지스터

(1)	이 레지스터는 특권 모드에서만 쓸 수 있습니다.
(2)	TZDCSEL 레지스터는 트립 존 서브 모듈의 일부이지만 디지털 비교 서브 모듈의 기능적인 중요성 때문에 여기에서 다시 언급됩니다. 

   34.2.9.3 Operation Highlights of the Digital Compare Submodule 디지털 비교 서브 모듈의 주요 동작
다음 절에서는 디지털 비교 하위 모듈의 주요 기능 및 구성 옵션에 대해 설명합니다.

     34.2.9.3.1 Digital Compare Events 디지털 비교 이벤트
이 섹션 앞부분의 그림 34-44에서 설명한 것처럼 트립 영역 입력(TZ1, TZ2, and TZ3)은 DCTRIPSEL 비트를 통해 선택하여 디지털 비교 A 고 / 저 (DCAH/L) 및 디지털 비교 B 고 / 저(DCBH/L) 신호를 생성 할 수 있습니다. 
그런 다음, TZDCSEL 레지스터의 구성은 DCAEVT1/2 및 DCBEVT1/2 이벤트 (이벤트 규정-Qualification- A 및 B)를 생성하는 선택된 DCAH / L 및 DCBH / L 신호의 동작을 규정합니다.

NOTE:
TZn 신호는 DCEVT 트리핑 기능으로 사용될 때 정상적인 입력 신호로 취급되며 액티브 하이 또는 액티브 로우 입력으로 정의 할 수 있습니다. TZn, DCAEVTx.force 또는 DCBEVTx.force 신호가 활성화되면 EPWM 출력이 비동기 적으로 트립됩니다. 조건을 래치(latched) 한 상태로 유지하려면 최소 3 * TBCLK의 동기화 펄스 폭이 필요합니다. 펄스 폭이 < 3 * TBCLK 동기 펄스 폭보다 작으면 트립 상태가 CBC 또는 OST 래치(latched)에 의해 래치(latched) 될 수 있습니다. (래치가 뭔데.......)

그런 다음 DCAEVT1/2 및 DCBEVT1/2 이벤트를 필터링하여 이벤트 신호의 필터링 된 버전 (DCEVTFILT)을 제공하거나 필터링을 무시할 수 있습니다. 필터링은 2.9.3.2 절에서 더 자세히 기술되어 있습니다. DCAEVT1/2 및 DCBEVT1/2 이벤트 신호 또는 필터링 된 DCEVTFILT 이벤트 신호는 트립 영역 모듈, TZ 인터럽트, ADC SOC 또는 PWM 동기 신호에 힘을 생성 할 수 있습니다.

force 신호: 
DCAEVT1/2.force 신호는 TZCTL [DCAEVT1 또는 DCAEVT2] 구성을 통해 EPWMxA 핀의 출력에 직접 영향을 미치거나 DCAEVT1/2 신호가 원샷 또는 사이클 바이 사이클로 선택되면 트립 소스를 통해 (TZSEL 레지스터를 통해) DCAEVT1/2.force 신호는 TZCTL [TZA] 구성을 통해 트립 동작을 수행 할 수 있습니다. DCBEVT1/2.force 신호는 유사하게 동작하지만 EPWMxA 출력 핀 대신 EPWMxB 출력 핀에 영향을 미칩니다. 
TZCTL 레지스터에서 충돌하는 동작의 우선 순위는 다음과 같습니다 (높은 우선 순위는 낮은 우선 순위를 무시합니다) : 

출력 EPWMxA: TZA (highest) -> DCAEVT1 -> DCAEVT2 (lowest)
출력 EPWMxB: TZB (highest) -> DCBEVT1 -> DCBEVT2 (lowest)

인터럽트 신호 : 
DCAEVT1 / 2 인터럽트 신호는 VIM에 트립 영역 인터럽트를 생성합니다. 인터럽트를 사용하려면 사용자가 TZEINT 레지스터에 DCAEVT1, DCAEVT2, DCBEVT1 또는 DCBEVT2 비트를 설정해야합니다. 이러한 이벤트 중 하나가 발생하면 EPWMxTZINT 인터럽트가 트리거되고 인터럽트를 지우려면 TZCLR 레지스터의 해당 비트를 설정해야합니다.

soc 신호 : 
DCAEVT1.soc 신호는 이벤트 트리거 서브 모듈과 인터페이스하며 ETSEL [SOCASEL] 비트를 통해 ADC 시작 변환 A (SOCA) 펄스를 생성하는 이벤트로 선택할 수 있습니다. 마찬가지로 DCBEVT1.soc 신호는 ETSEL [SOCBSEL] 비트를 통해 ADC 시작 변환B (SOCB) 펄스를 생성하는 이벤트로 선택 될 수 있습니다.

동기 신호 :
DCAEVT1.sync 및 DCBEVT1.sync 이벤트는 EPWMxSYNCI 입력 신호 및 TBCTL [SWFSYNC] 신호와 OR되어 타임베이스 카운터에 동기화 펄스를 생성합니다.

그림 34-45와 그림 34-46은 DCAEVT1, DCAEVT2 또는 DCEVTFILT 신호가 디지털 비교A 이벤트 force, 인터럽트, soc 및 동기 신호를 생성하기 위해 처리되는 방법을 보여줍니다.

Figure 34-45. DCAEVT1 Event Triggering  DCAEVT1 이벤트 트리거링
Figure 34-46. DCAEVT2 Event Triggering  DCAEVT2 이벤트 트리거링 

그림 34-47 및 그림 34-48은 DCBEVT1, DCBEVT2 또는 DCEVTFILT 신호가 디지털 비교B 이벤트 force, 인터럽트, soc 및 동기 신호를 생성하기 위해 처리되는 방법을 보여줍니다.

Figure 34-47. DCBEVT1 Event Triggering  DCBEVT1 이벤트 트리거링
Figure 34-48. DCBEVT2 Event Triggering  DCBEVT2 이벤트 트리거링

     34.2.9.3.2 Event Filtering 이벤트 필터링
이벤트 필터링 로직을 통해 DCAEVT1/2 및 DCBEVT1/2 이벤트를 필터링하여 일정 기간 동안 이벤트를 선택적으로 비워서 잡음을 제거 할 수 있습니다. 이것은 아날로그 비교기 출력이 DCAEVT1/2 및 DCBEVT1/2 이벤트를 트리거하도록 선택 될 수 있는 경우에 유용하며 블링킹(blanking) 로직은 PWM 출력을 트리핑하거나 인터럽트 또는 ADC 전환 시작(start-of-conversion)을 생성하기 전에 신호의 잠재적 노이즈를 필터링하는 데 사용됩니다 

Figure 34-49. Event Filtering

블링킹 로직이 활성화 된 경우 디지털 비교 이벤트 중 하나 (DCAEVT1, DCAEVT2, DCBEVT1, DCBEVT2)가 필터링 대상으로 선택됩니다. 신호가 활성화되어있는 동안 모든 이벤트 발생을 필터링하는 블링킹 윈도우는 CTR = PRD 펄스 또는 CTR = 0 펄스 (DCFCTL [PULSESEL] 비트로 구성됨) 중 하나에 정렬됩니다. TBCLK 카운트의 오프셋 값은 DCFOFFSET 레지스터에 프로그래밍되어 CTR = PRD 또는 CTR = 0 펄스 이후의 어떤 시점에서 블링킹 윈도우가 시작되는지 결정합니다. 오프셋 카운터가 만료 된 후 TBCLK 카운트 수에서 블링킹 윈도우의 주기는 응용 프로그램에 의해 DCFWINDOW 레지스터에 기록됩니다. 블링킹 윈도우에서 모든 이벤트는 무시됩니다. 블링킹 윈도우가 끝나기 전과 후에 이벤트는 이전처럼 soc, sync, interrupt 및 force 신호를 생성 할 수 있습니다.

그림 34-50은 ePWM 기간 내의 오프셋 및 블링킹 윈도우의 여러 타이밍 조건을 보여줍니다. 블링킹 윈도우가 CTR = 0 또는 CTR = PRD 경계를 넘으면 다음 윈도우는 CTR = 0 또는 CTR = PRD 펄스 이후에 동일한 오프셋 값에서 시작됩니다.

Figure 34-50. Blanking Window Timing Diagram



34.2.10 Proper Interrupt Initialization Procedure 적절한 인터럽트 초기화 절차 
ePWM 주변 장치 클럭이 활성화되면 ePWM 레지스터가 제대로 초기화되지 않아 가짜 이벤트로 인해 인터럽트 플래그가 설정 될 수 있습니다. ePWM 주변 장치를 초기화하는 올바른 절차는 다음과 같습니다.

1. 글로벌 인터럽트 비활성화 (CPU INTM 플래그)
2. ePWM 인터럽트 비활성화
3. TBCLKSYNC = 0 으로 세팅
4. 주변 장치 레지스터 초기화
5. TBCLKSYNC = 1 으로 세팅
6. 모든 가짜 ePWM 플래그를 지우십시오 (인터럽트 플래그 포함).
7. ePWM 인터럽트 활성화
8. 글로벌 인터럽트 활성화



34.3 Application Examples 어플리케이션 예제

ePWM 모듈은 독립실행형 모듈로 완벽하게 작동하거나 다른 동일한 ePWM 모듈과 동기화되어 작동하는 데 필요한 모든 로컬 리소스를 갖추고 있습니다.

   34.3.1 Overview of Multiple Modules 다중 모듈 개요
이전에 이 사용 설명서의 모든 설명에서 단일 모듈의 작동을 설명했습니다. 시스템에서 함께 작동하는 여러 모듈에 대한 이해를 돕기 위해 참조로 설명 된 ePWM 모듈은 그림 34-51에 표시된 보다 단순화 된 블록 다이어그램으로 표시됩니다. 이 단순화 된 ePWM 블록은 다중 ePWM 모듈이 함께 작동하여 다중 스위치 전원 토폴로지가 제어되는 방법을 설명하는 데 필요한 주요 리소스만 보여줍니다.

Figure 34-51. Simplified ePWM Module 단순한 ePWM 모듈

   34.3.2 Key Configuration Capabilities 주요 구성 기능
각 모듈에서 사용할 수있는 핵심 구성은 다음과 같습니다.

- SyncIn 옵션
   - 동기화 스트로브가 들어오는 위상 레지스터가 있는 자체 카운터를 로드합니다. 
-스위치가 닫혀야 사용가능하다(EN)    
( Load own counter with phase register on an incoming sync strobe—enable (EN) switch closed ) 
   - 들어오는 동시화 신호를 아무것도 하지않거나 무시한다. - 스위치가 오픈되야 사용가능합니다.
    ( Do nothing or ignore incoming sync strobe—enable switch open )
   - 동기화 흐름 - SyncOut이 SyncIn에 연결되있습니다.
   - 마스터 모드, PWM 경계에서 동기화 제공 - SyncOut이 CTR = PRD에 연결됨
   - 마스터 모드, 임의의 프로그래밍 가능 시점에서 동기화 제공 - SyncOut이 CTR = CMPB에 연결됨
   - 모듈이 독립 실행형 모드이고 다른 모듈에 동기화 안 함(No sync) 제공 - SyncOut이 X에 연결됨 (비활성화 됨)
- SyncOut 옵션 
   - 동기화 흐름 - SyncOut이 SyncIn에 연결되었습니다.
   - 마스터 모드 - PWM 경계에서 동기화 제공 - SyncOut이 CTR = PRD에 연결됨
   - 마스터 모드, 임의의 프로그래밍 가능 시점에서 동기화 제공 - SyncOut이 CTR = CMPB에 연결됨
   - 모듈이 독립 실행형 모드이고 다른 모듈에 동기화 안 함(No sync) 제공 - SyncOut이 X에 연결됨 (비활성화 됨)

SyncOut의 각 선택에 대해, 모듈은 SyncIn 스트로브 입력 상에 새로운 위상 값을 갖는 자신의 카운터를 로드하거나 이를 사용가능한 스위치를 통해 무시하도록 선택할 수도 있습니다. 다양한 조합이 가능하지만, 가장 일반적인 두 개의 마스터 모듈 및 슬레이브 모듈 모드가 그림 34-52에 나와 있습니다.

Figure 34-52. EPWM1 Configured as a Typical Master, EPWM2 Configured as a Slave 
               표준 마스터로 구성된 EPWM1, 슬레이브로 구성된 EPWM2


   34.3.3 Controlling Multiple Buck Converters With Independent Frequencies 
          독립적인 주파수로 다중 Buck 컨버터 제어
가장 간단한 전력 변환기 토폴로지 중 하나는 buck입니다. 마스터로 구성된 단일 ePWM 모듈은 동일한 PWM 주파수로 두 개의 buck 스테이지를 제어 할 수 있습니다. 각 buck 컨버터에 독립적인 주파수 제어가 필요한 경우 각 컨버터 스테이지마다 하나의 ePWM 모듈을 할당해야합니다. 
그림 34-53은 각각 독립적인 주파수로 동작하는 4 개의 buck 스테이지를 보여줍니다. 이 경우 네 개의 ePWM 모듈이 모두 마스터로 구성되며 동기화가 사용되지 않습니다. 그림 34-54는 그림 34-53의 설정에 의해 생성 된 파형을 보여줍니다. 4 개의 스테이지가 있지만 3 개의 파형 만 표시됩니다.



Figure 34-53. Control of Four Buck Stages. Here FPWM1≠ FPWM2≠ FPWM3≠ FPWM4

NOTE: Θ = X 위상 레지스터의 값이 "상관 없음"

Figure 34-54. Buck Waveforms for Figure 34-53 (Note: Only three bucks shown here)
               그림 34-53의 buck 파형 (참고 : 여기서 3 buck만 표시)

PI : 이 이벤트가 인터럽트를 트리거 함을 나타냅니다.
CB/A : 이 이벤트가 ADC 변환 시작을 트리거 함을 나타냅니다.

Example 34-8. Configuration for Example in Figure 34-54

   34.3.4 Controlling Multiple Buck Converters With Same Frequencies 같은 주파수를 가진 다중 buck 컨버터 제어
 동기화가 요구되는 경우 ePWM 모듈 2는 슬레이브로 구성 될 수 있으며 모듈 1의 정수 배수 (N) 주파수에서 작동 할 수 있습니다. 마스터에서 슬레이브로의 동기 신호는 이러한 모듈이 잠금 상태를 유지하도록합니다. 그림 34-55는 그러한 구성을 보여줍니다. 그림 34-56은 구성에 의해 생성된 파형을 보여줍니다.

Figure 34-55. Control of Four Buck Stages. (Note: FPWM2 = N x FPWM1) 4개의 buck 제어
Figure 34-56. Buck Waveforms for Figure 34-55 (Note: FPWM2 = FPWM1) 그림 34-55의 buck 파형

Example 34-9. Code Snippet for Configuration in Figure 34-55 그림 34-55의 구성을 위한 코드 일부


   34.3.5 Controlling Multiple Half H-Bridge (HHB) Converters 다중 Half H-Bridge(HHB) 변환기 제어
여러 스위칭 요소를 제어해야하는 토폴로지는 동일한 ePWM 모듈을 통해 처리 할 수도 있습니다. 단일 ePWM 모듈을 사용하여 Half-H bridge 단계를 제어 할 수 있습니다. 이 컨트롤은 여러 단계로 확장 될 수 있습니다. 그림 34-57은 두 개의 동기화 된 Half-H 브리지 단계의 제어를 보여줍니다. 여기서 스테이지 2는 스테이지 1의 integer multiple(N) 주파수에서 작동 할 수 있습니다. 그림 34-58은 그림 34-57에 표시된 구성에 의해 생성 된 파형을 보여줍니다.
모듈 2 (슬레이브)는 동기화 흐름을 위해 구성됩니다. 필요한 경우 이 구성은 세 번째 Half-H bridge가 PWM 모듈 3에 의해 제어 될 수있게하며, 가장 중요한 점은 마스터 모듈 1과 동기화 상태를 유지할 수 있도록 합니다.

Figure 34-57. Control of Two Half-H Bridge Stages (FPWM2 = N x FPWM1) 두 개의 Half-H 브리지 단계 제어
Figure 34-58. Half-H Bridge Waveforms for Figure 34-57 (Note: Here FPWM2 = FPWM1 ) 
               그림 34-57의 Half-H 브리지 파형

Example 34-10. Code Snippet for Configuration in Figure 34-57 그림 34-57의 구성을 위한 코드 일부

   34.3.6 모터용 이중 3-위상 인버터 제어 (ACI 및 PMSM)
단일 전력단을 제어하는 다중 모듈 아이디어는 3-위상 인버터 케이스로 확장 될 수 있습니다. 이 경우 6 개의 스위칭 소자는 3 개의 PWM 모듈을 사용하여 제어 할 수 있으며 하나는 인버터의 각 다리(leg)에 하나씩 사용됩니다. 각 다리는 동일한 주파수로 전환해야하며 모든 다리는 동기화되어야합니다. 마스터 + 2 개의 슬레이브 구성으로 이 요구 사항을 쉽게 해결할 수 있습니다. 
그림 34-59는 6 개의 PWM 모듈이 2 개의 독립적인 3-위상 인버터를 제어하는 방법을 보여줍니다. 각각은 모터를 가동합니다.

이전 섹션에서 설명한 경우와 마찬가지로 각 인버터를 다른 빈도로 실행하도록 선택할 수 있습니다. (모듈 1과 모듈 4는 그림 34-59 에서와 같이 마스터입니다.) 또는 하나의 마스터 (모듈 1)와 5 개의 슬레이브를 사용하여 두 인버터를 동기화 할 수 있습니다. 이 경우 모듈 4, 5 및 6 (모두 동일)의 주파수는 모듈 1, 2, 3 (모두 동일)에 대한 주파수의 정수 배가 될 수 있습니다.

Figure 34-59. Control of Dual 3-Phase Inverter Stages as Is Commonly Used in Motor Control
               모터 제어에서 일반적으로 사용되는 이중 3-위상 인버터 단계 제어

Figure 34-60. 3-Phase Inverter Waveforms for Figure 34-59 (Only One Inverter Shown) 
               3-위상 인버터 파형 (하나의 인버터만 표시)

34.3.7 Practical Applications Using Phase Control Between PWM Modules 
        PWM 모듈 사이에서 위상 제어를 사용하는 실용적인 애플리케이션
지금까지는 위상 레지스터 (TBPHS)를 사용하지 않은 예제가 없습니다. 그것은 0으로 설정되었거나 값이 상관 없습니다. 그러나 TBPHS에 적절한 값을 프로그래밍함으로써 다중 PWM 모듈은 정확한 작동을 위해 스테이지 간의 위상 관계에 의존하는 또 다른 애플리케이션 클래스를 해결할 수 있습니다. TB 모듈 섹션에서 설명한 것처럼 SyncIn 펄스가 TBPHS 레지스터를 TBCTR 레지스터에 로드 할 수 있도록 PWM 모듈을 구성 할 수 있습니다. 이러한 개념을 설명하기 위해, 그림 34-61은 120 °의 위상 관계를 갖는 마스터 및 슬레이브 모듈, 
즉 슬레이브가 마스터를 리드합니다. 

Figure 34-61. Configuring Two PWM Modules for Phase Control 위상 제어를 위한 2 개의 PWM 모듈 구성


그림 34-62는 이 구성과 관련된 타이밍 파형을 보여줍니다. 여기서, 마스터와 슬레이브 모두 TBPRD = 600입니다. 슬레이브의 경우 TBPHS = 200 (200/600 × 360 ° = 120 °) -> 이 계산식 잘 알아둬야할 것 같다. 입니다. 마스터가 SyncIn 펄스 (CTR = PRD)를 생성 할 때마다 TBPHS = 200의 값이 슬레이브 TBCTR 레지스터에로드되므로 슬레이브 시간축은 항상 마스터의 타임베이스를 120도 앞섭니다.

Figure 34-62. Timing Waveforms Associated With Phase Control Between 2 Modules
               2 개의 모듈 사이의 위상 제어와 관련된 타이밍 파형


34.4 ePWM Registers ( 는 필요할 때 원문 찾아보세용.. ^^ ) 


